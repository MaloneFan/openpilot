#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_203406506473517518) {
   out_203406506473517518[0] = 0;
   out_203406506473517518[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_203406506473517518[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_203406506473517518[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_203406506473517518[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_203406506473517518[5] = -sin(in_vec[1]);
   out_203406506473517518[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_203406506473517518[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_203406506473517518[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_203406506473517518[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_203406506473517518[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_203406506473517518[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_203406506473517518[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_203406506473517518[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_203406506473517518[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_203406506473517518[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_203406506473517518[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_203406506473517518[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4842914450119463527) {
   out_4842914450119463527[0] = delta_x[0] + nom_x[0];
   out_4842914450119463527[1] = delta_x[1] + nom_x[1];
   out_4842914450119463527[2] = delta_x[2] + nom_x[2];
   out_4842914450119463527[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4842914450119463527[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4842914450119463527[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4842914450119463527[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4842914450119463527[7] = delta_x[6] + nom_x[7];
   out_4842914450119463527[8] = delta_x[7] + nom_x[8];
   out_4842914450119463527[9] = delta_x[8] + nom_x[9];
   out_4842914450119463527[10] = delta_x[9] + nom_x[10];
   out_4842914450119463527[11] = delta_x[10] + nom_x[11];
   out_4842914450119463527[12] = delta_x[11] + nom_x[12];
   out_4842914450119463527[13] = delta_x[12] + nom_x[13];
   out_4842914450119463527[14] = delta_x[13] + nom_x[14];
   out_4842914450119463527[15] = delta_x[14] + nom_x[15];
   out_4842914450119463527[16] = delta_x[15] + nom_x[16];
   out_4842914450119463527[17] = delta_x[16] + nom_x[17];
   out_4842914450119463527[18] = delta_x[17] + nom_x[18];
   out_4842914450119463527[19] = delta_x[18] + nom_x[19];
   out_4842914450119463527[20] = delta_x[19] + nom_x[20];
   out_4842914450119463527[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5558287471497634478) {
   out_5558287471497634478[0] = -nom_x[0] + true_x[0];
   out_5558287471497634478[1] = -nom_x[1] + true_x[1];
   out_5558287471497634478[2] = -nom_x[2] + true_x[2];
   out_5558287471497634478[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5558287471497634478[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5558287471497634478[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5558287471497634478[6] = -nom_x[7] + true_x[7];
   out_5558287471497634478[7] = -nom_x[8] + true_x[8];
   out_5558287471497634478[8] = -nom_x[9] + true_x[9];
   out_5558287471497634478[9] = -nom_x[10] + true_x[10];
   out_5558287471497634478[10] = -nom_x[11] + true_x[11];
   out_5558287471497634478[11] = -nom_x[12] + true_x[12];
   out_5558287471497634478[12] = -nom_x[13] + true_x[13];
   out_5558287471497634478[13] = -nom_x[14] + true_x[14];
   out_5558287471497634478[14] = -nom_x[15] + true_x[15];
   out_5558287471497634478[15] = -nom_x[16] + true_x[16];
   out_5558287471497634478[16] = -nom_x[17] + true_x[17];
   out_5558287471497634478[17] = -nom_x[18] + true_x[18];
   out_5558287471497634478[18] = -nom_x[19] + true_x[19];
   out_5558287471497634478[19] = -nom_x[20] + true_x[20];
   out_5558287471497634478[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5812090363690563332) {
   out_5812090363690563332[0] = 1.0;
   out_5812090363690563332[1] = 0;
   out_5812090363690563332[2] = 0;
   out_5812090363690563332[3] = 0;
   out_5812090363690563332[4] = 0;
   out_5812090363690563332[5] = 0;
   out_5812090363690563332[6] = 0;
   out_5812090363690563332[7] = 0;
   out_5812090363690563332[8] = 0;
   out_5812090363690563332[9] = 0;
   out_5812090363690563332[10] = 0;
   out_5812090363690563332[11] = 0;
   out_5812090363690563332[12] = 0;
   out_5812090363690563332[13] = 0;
   out_5812090363690563332[14] = 0;
   out_5812090363690563332[15] = 0;
   out_5812090363690563332[16] = 0;
   out_5812090363690563332[17] = 0;
   out_5812090363690563332[18] = 0;
   out_5812090363690563332[19] = 0;
   out_5812090363690563332[20] = 0;
   out_5812090363690563332[21] = 0;
   out_5812090363690563332[22] = 1.0;
   out_5812090363690563332[23] = 0;
   out_5812090363690563332[24] = 0;
   out_5812090363690563332[25] = 0;
   out_5812090363690563332[26] = 0;
   out_5812090363690563332[27] = 0;
   out_5812090363690563332[28] = 0;
   out_5812090363690563332[29] = 0;
   out_5812090363690563332[30] = 0;
   out_5812090363690563332[31] = 0;
   out_5812090363690563332[32] = 0;
   out_5812090363690563332[33] = 0;
   out_5812090363690563332[34] = 0;
   out_5812090363690563332[35] = 0;
   out_5812090363690563332[36] = 0;
   out_5812090363690563332[37] = 0;
   out_5812090363690563332[38] = 0;
   out_5812090363690563332[39] = 0;
   out_5812090363690563332[40] = 0;
   out_5812090363690563332[41] = 0;
   out_5812090363690563332[42] = 0;
   out_5812090363690563332[43] = 0;
   out_5812090363690563332[44] = 1.0;
   out_5812090363690563332[45] = 0;
   out_5812090363690563332[46] = 0;
   out_5812090363690563332[47] = 0;
   out_5812090363690563332[48] = 0;
   out_5812090363690563332[49] = 0;
   out_5812090363690563332[50] = 0;
   out_5812090363690563332[51] = 0;
   out_5812090363690563332[52] = 0;
   out_5812090363690563332[53] = 0;
   out_5812090363690563332[54] = 0;
   out_5812090363690563332[55] = 0;
   out_5812090363690563332[56] = 0;
   out_5812090363690563332[57] = 0;
   out_5812090363690563332[58] = 0;
   out_5812090363690563332[59] = 0;
   out_5812090363690563332[60] = 0;
   out_5812090363690563332[61] = 0;
   out_5812090363690563332[62] = 0;
   out_5812090363690563332[63] = 0;
   out_5812090363690563332[64] = 0;
   out_5812090363690563332[65] = 0;
   out_5812090363690563332[66] = -0.5*state[4];
   out_5812090363690563332[67] = -0.5*state[5];
   out_5812090363690563332[68] = -0.5*state[6];
   out_5812090363690563332[69] = 0;
   out_5812090363690563332[70] = 0;
   out_5812090363690563332[71] = 0;
   out_5812090363690563332[72] = 0;
   out_5812090363690563332[73] = 0;
   out_5812090363690563332[74] = 0;
   out_5812090363690563332[75] = 0;
   out_5812090363690563332[76] = 0;
   out_5812090363690563332[77] = 0;
   out_5812090363690563332[78] = 0;
   out_5812090363690563332[79] = 0;
   out_5812090363690563332[80] = 0;
   out_5812090363690563332[81] = 0;
   out_5812090363690563332[82] = 0;
   out_5812090363690563332[83] = 0;
   out_5812090363690563332[84] = 0;
   out_5812090363690563332[85] = 0;
   out_5812090363690563332[86] = 0;
   out_5812090363690563332[87] = 0.5*state[3];
   out_5812090363690563332[88] = 0.5*state[6];
   out_5812090363690563332[89] = -0.5*state[5];
   out_5812090363690563332[90] = 0;
   out_5812090363690563332[91] = 0;
   out_5812090363690563332[92] = 0;
   out_5812090363690563332[93] = 0;
   out_5812090363690563332[94] = 0;
   out_5812090363690563332[95] = 0;
   out_5812090363690563332[96] = 0;
   out_5812090363690563332[97] = 0;
   out_5812090363690563332[98] = 0;
   out_5812090363690563332[99] = 0;
   out_5812090363690563332[100] = 0;
   out_5812090363690563332[101] = 0;
   out_5812090363690563332[102] = 0;
   out_5812090363690563332[103] = 0;
   out_5812090363690563332[104] = 0;
   out_5812090363690563332[105] = 0;
   out_5812090363690563332[106] = 0;
   out_5812090363690563332[107] = 0;
   out_5812090363690563332[108] = -0.5*state[6];
   out_5812090363690563332[109] = 0.5*state[3];
   out_5812090363690563332[110] = 0.5*state[4];
   out_5812090363690563332[111] = 0;
   out_5812090363690563332[112] = 0;
   out_5812090363690563332[113] = 0;
   out_5812090363690563332[114] = 0;
   out_5812090363690563332[115] = 0;
   out_5812090363690563332[116] = 0;
   out_5812090363690563332[117] = 0;
   out_5812090363690563332[118] = 0;
   out_5812090363690563332[119] = 0;
   out_5812090363690563332[120] = 0;
   out_5812090363690563332[121] = 0;
   out_5812090363690563332[122] = 0;
   out_5812090363690563332[123] = 0;
   out_5812090363690563332[124] = 0;
   out_5812090363690563332[125] = 0;
   out_5812090363690563332[126] = 0;
   out_5812090363690563332[127] = 0;
   out_5812090363690563332[128] = 0;
   out_5812090363690563332[129] = 0.5*state[5];
   out_5812090363690563332[130] = -0.5*state[4];
   out_5812090363690563332[131] = 0.5*state[3];
   out_5812090363690563332[132] = 0;
   out_5812090363690563332[133] = 0;
   out_5812090363690563332[134] = 0;
   out_5812090363690563332[135] = 0;
   out_5812090363690563332[136] = 0;
   out_5812090363690563332[137] = 0;
   out_5812090363690563332[138] = 0;
   out_5812090363690563332[139] = 0;
   out_5812090363690563332[140] = 0;
   out_5812090363690563332[141] = 0;
   out_5812090363690563332[142] = 0;
   out_5812090363690563332[143] = 0;
   out_5812090363690563332[144] = 0;
   out_5812090363690563332[145] = 0;
   out_5812090363690563332[146] = 0;
   out_5812090363690563332[147] = 0;
   out_5812090363690563332[148] = 0;
   out_5812090363690563332[149] = 0;
   out_5812090363690563332[150] = 0;
   out_5812090363690563332[151] = 0;
   out_5812090363690563332[152] = 0;
   out_5812090363690563332[153] = 1.0;
   out_5812090363690563332[154] = 0;
   out_5812090363690563332[155] = 0;
   out_5812090363690563332[156] = 0;
   out_5812090363690563332[157] = 0;
   out_5812090363690563332[158] = 0;
   out_5812090363690563332[159] = 0;
   out_5812090363690563332[160] = 0;
   out_5812090363690563332[161] = 0;
   out_5812090363690563332[162] = 0;
   out_5812090363690563332[163] = 0;
   out_5812090363690563332[164] = 0;
   out_5812090363690563332[165] = 0;
   out_5812090363690563332[166] = 0;
   out_5812090363690563332[167] = 0;
   out_5812090363690563332[168] = 0;
   out_5812090363690563332[169] = 0;
   out_5812090363690563332[170] = 0;
   out_5812090363690563332[171] = 0;
   out_5812090363690563332[172] = 0;
   out_5812090363690563332[173] = 0;
   out_5812090363690563332[174] = 0;
   out_5812090363690563332[175] = 1.0;
   out_5812090363690563332[176] = 0;
   out_5812090363690563332[177] = 0;
   out_5812090363690563332[178] = 0;
   out_5812090363690563332[179] = 0;
   out_5812090363690563332[180] = 0;
   out_5812090363690563332[181] = 0;
   out_5812090363690563332[182] = 0;
   out_5812090363690563332[183] = 0;
   out_5812090363690563332[184] = 0;
   out_5812090363690563332[185] = 0;
   out_5812090363690563332[186] = 0;
   out_5812090363690563332[187] = 0;
   out_5812090363690563332[188] = 0;
   out_5812090363690563332[189] = 0;
   out_5812090363690563332[190] = 0;
   out_5812090363690563332[191] = 0;
   out_5812090363690563332[192] = 0;
   out_5812090363690563332[193] = 0;
   out_5812090363690563332[194] = 0;
   out_5812090363690563332[195] = 0;
   out_5812090363690563332[196] = 0;
   out_5812090363690563332[197] = 1.0;
   out_5812090363690563332[198] = 0;
   out_5812090363690563332[199] = 0;
   out_5812090363690563332[200] = 0;
   out_5812090363690563332[201] = 0;
   out_5812090363690563332[202] = 0;
   out_5812090363690563332[203] = 0;
   out_5812090363690563332[204] = 0;
   out_5812090363690563332[205] = 0;
   out_5812090363690563332[206] = 0;
   out_5812090363690563332[207] = 0;
   out_5812090363690563332[208] = 0;
   out_5812090363690563332[209] = 0;
   out_5812090363690563332[210] = 0;
   out_5812090363690563332[211] = 0;
   out_5812090363690563332[212] = 0;
   out_5812090363690563332[213] = 0;
   out_5812090363690563332[214] = 0;
   out_5812090363690563332[215] = 0;
   out_5812090363690563332[216] = 0;
   out_5812090363690563332[217] = 0;
   out_5812090363690563332[218] = 0;
   out_5812090363690563332[219] = 1.0;
   out_5812090363690563332[220] = 0;
   out_5812090363690563332[221] = 0;
   out_5812090363690563332[222] = 0;
   out_5812090363690563332[223] = 0;
   out_5812090363690563332[224] = 0;
   out_5812090363690563332[225] = 0;
   out_5812090363690563332[226] = 0;
   out_5812090363690563332[227] = 0;
   out_5812090363690563332[228] = 0;
   out_5812090363690563332[229] = 0;
   out_5812090363690563332[230] = 0;
   out_5812090363690563332[231] = 0;
   out_5812090363690563332[232] = 0;
   out_5812090363690563332[233] = 0;
   out_5812090363690563332[234] = 0;
   out_5812090363690563332[235] = 0;
   out_5812090363690563332[236] = 0;
   out_5812090363690563332[237] = 0;
   out_5812090363690563332[238] = 0;
   out_5812090363690563332[239] = 0;
   out_5812090363690563332[240] = 0;
   out_5812090363690563332[241] = 1.0;
   out_5812090363690563332[242] = 0;
   out_5812090363690563332[243] = 0;
   out_5812090363690563332[244] = 0;
   out_5812090363690563332[245] = 0;
   out_5812090363690563332[246] = 0;
   out_5812090363690563332[247] = 0;
   out_5812090363690563332[248] = 0;
   out_5812090363690563332[249] = 0;
   out_5812090363690563332[250] = 0;
   out_5812090363690563332[251] = 0;
   out_5812090363690563332[252] = 0;
   out_5812090363690563332[253] = 0;
   out_5812090363690563332[254] = 0;
   out_5812090363690563332[255] = 0;
   out_5812090363690563332[256] = 0;
   out_5812090363690563332[257] = 0;
   out_5812090363690563332[258] = 0;
   out_5812090363690563332[259] = 0;
   out_5812090363690563332[260] = 0;
   out_5812090363690563332[261] = 0;
   out_5812090363690563332[262] = 0;
   out_5812090363690563332[263] = 1.0;
   out_5812090363690563332[264] = 0;
   out_5812090363690563332[265] = 0;
   out_5812090363690563332[266] = 0;
   out_5812090363690563332[267] = 0;
   out_5812090363690563332[268] = 0;
   out_5812090363690563332[269] = 0;
   out_5812090363690563332[270] = 0;
   out_5812090363690563332[271] = 0;
   out_5812090363690563332[272] = 0;
   out_5812090363690563332[273] = 0;
   out_5812090363690563332[274] = 0;
   out_5812090363690563332[275] = 0;
   out_5812090363690563332[276] = 0;
   out_5812090363690563332[277] = 0;
   out_5812090363690563332[278] = 0;
   out_5812090363690563332[279] = 0;
   out_5812090363690563332[280] = 0;
   out_5812090363690563332[281] = 0;
   out_5812090363690563332[282] = 0;
   out_5812090363690563332[283] = 0;
   out_5812090363690563332[284] = 0;
   out_5812090363690563332[285] = 1.0;
   out_5812090363690563332[286] = 0;
   out_5812090363690563332[287] = 0;
   out_5812090363690563332[288] = 0;
   out_5812090363690563332[289] = 0;
   out_5812090363690563332[290] = 0;
   out_5812090363690563332[291] = 0;
   out_5812090363690563332[292] = 0;
   out_5812090363690563332[293] = 0;
   out_5812090363690563332[294] = 0;
   out_5812090363690563332[295] = 0;
   out_5812090363690563332[296] = 0;
   out_5812090363690563332[297] = 0;
   out_5812090363690563332[298] = 0;
   out_5812090363690563332[299] = 0;
   out_5812090363690563332[300] = 0;
   out_5812090363690563332[301] = 0;
   out_5812090363690563332[302] = 0;
   out_5812090363690563332[303] = 0;
   out_5812090363690563332[304] = 0;
   out_5812090363690563332[305] = 0;
   out_5812090363690563332[306] = 0;
   out_5812090363690563332[307] = 1.0;
   out_5812090363690563332[308] = 0;
   out_5812090363690563332[309] = 0;
   out_5812090363690563332[310] = 0;
   out_5812090363690563332[311] = 0;
   out_5812090363690563332[312] = 0;
   out_5812090363690563332[313] = 0;
   out_5812090363690563332[314] = 0;
   out_5812090363690563332[315] = 0;
   out_5812090363690563332[316] = 0;
   out_5812090363690563332[317] = 0;
   out_5812090363690563332[318] = 0;
   out_5812090363690563332[319] = 0;
   out_5812090363690563332[320] = 0;
   out_5812090363690563332[321] = 0;
   out_5812090363690563332[322] = 0;
   out_5812090363690563332[323] = 0;
   out_5812090363690563332[324] = 0;
   out_5812090363690563332[325] = 0;
   out_5812090363690563332[326] = 0;
   out_5812090363690563332[327] = 0;
   out_5812090363690563332[328] = 0;
   out_5812090363690563332[329] = 1.0;
   out_5812090363690563332[330] = 0;
   out_5812090363690563332[331] = 0;
   out_5812090363690563332[332] = 0;
   out_5812090363690563332[333] = 0;
   out_5812090363690563332[334] = 0;
   out_5812090363690563332[335] = 0;
   out_5812090363690563332[336] = 0;
   out_5812090363690563332[337] = 0;
   out_5812090363690563332[338] = 0;
   out_5812090363690563332[339] = 0;
   out_5812090363690563332[340] = 0;
   out_5812090363690563332[341] = 0;
   out_5812090363690563332[342] = 0;
   out_5812090363690563332[343] = 0;
   out_5812090363690563332[344] = 0;
   out_5812090363690563332[345] = 0;
   out_5812090363690563332[346] = 0;
   out_5812090363690563332[347] = 0;
   out_5812090363690563332[348] = 0;
   out_5812090363690563332[349] = 0;
   out_5812090363690563332[350] = 0;
   out_5812090363690563332[351] = 1.0;
   out_5812090363690563332[352] = 0;
   out_5812090363690563332[353] = 0;
   out_5812090363690563332[354] = 0;
   out_5812090363690563332[355] = 0;
   out_5812090363690563332[356] = 0;
   out_5812090363690563332[357] = 0;
   out_5812090363690563332[358] = 0;
   out_5812090363690563332[359] = 0;
   out_5812090363690563332[360] = 0;
   out_5812090363690563332[361] = 0;
   out_5812090363690563332[362] = 0;
   out_5812090363690563332[363] = 0;
   out_5812090363690563332[364] = 0;
   out_5812090363690563332[365] = 0;
   out_5812090363690563332[366] = 0;
   out_5812090363690563332[367] = 0;
   out_5812090363690563332[368] = 0;
   out_5812090363690563332[369] = 0;
   out_5812090363690563332[370] = 0;
   out_5812090363690563332[371] = 0;
   out_5812090363690563332[372] = 0;
   out_5812090363690563332[373] = 1.0;
   out_5812090363690563332[374] = 0;
   out_5812090363690563332[375] = 0;
   out_5812090363690563332[376] = 0;
   out_5812090363690563332[377] = 0;
   out_5812090363690563332[378] = 0;
   out_5812090363690563332[379] = 0;
   out_5812090363690563332[380] = 0;
   out_5812090363690563332[381] = 0;
   out_5812090363690563332[382] = 0;
   out_5812090363690563332[383] = 0;
   out_5812090363690563332[384] = 0;
   out_5812090363690563332[385] = 0;
   out_5812090363690563332[386] = 0;
   out_5812090363690563332[387] = 0;
   out_5812090363690563332[388] = 0;
   out_5812090363690563332[389] = 0;
   out_5812090363690563332[390] = 0;
   out_5812090363690563332[391] = 0;
   out_5812090363690563332[392] = 0;
   out_5812090363690563332[393] = 0;
   out_5812090363690563332[394] = 0;
   out_5812090363690563332[395] = 1.0;
   out_5812090363690563332[396] = 0;
   out_5812090363690563332[397] = 0;
   out_5812090363690563332[398] = 0;
   out_5812090363690563332[399] = 0;
   out_5812090363690563332[400] = 0;
   out_5812090363690563332[401] = 0;
   out_5812090363690563332[402] = 0;
   out_5812090363690563332[403] = 0;
   out_5812090363690563332[404] = 0;
   out_5812090363690563332[405] = 0;
   out_5812090363690563332[406] = 0;
   out_5812090363690563332[407] = 0;
   out_5812090363690563332[408] = 0;
   out_5812090363690563332[409] = 0;
   out_5812090363690563332[410] = 0;
   out_5812090363690563332[411] = 0;
   out_5812090363690563332[412] = 0;
   out_5812090363690563332[413] = 0;
   out_5812090363690563332[414] = 0;
   out_5812090363690563332[415] = 0;
   out_5812090363690563332[416] = 0;
   out_5812090363690563332[417] = 1.0;
   out_5812090363690563332[418] = 0;
   out_5812090363690563332[419] = 0;
   out_5812090363690563332[420] = 0;
   out_5812090363690563332[421] = 0;
   out_5812090363690563332[422] = 0;
   out_5812090363690563332[423] = 0;
   out_5812090363690563332[424] = 0;
   out_5812090363690563332[425] = 0;
   out_5812090363690563332[426] = 0;
   out_5812090363690563332[427] = 0;
   out_5812090363690563332[428] = 0;
   out_5812090363690563332[429] = 0;
   out_5812090363690563332[430] = 0;
   out_5812090363690563332[431] = 0;
   out_5812090363690563332[432] = 0;
   out_5812090363690563332[433] = 0;
   out_5812090363690563332[434] = 0;
   out_5812090363690563332[435] = 0;
   out_5812090363690563332[436] = 0;
   out_5812090363690563332[437] = 0;
   out_5812090363690563332[438] = 0;
   out_5812090363690563332[439] = 1.0;
   out_5812090363690563332[440] = 0;
   out_5812090363690563332[441] = 0;
   out_5812090363690563332[442] = 0;
   out_5812090363690563332[443] = 0;
   out_5812090363690563332[444] = 0;
   out_5812090363690563332[445] = 0;
   out_5812090363690563332[446] = 0;
   out_5812090363690563332[447] = 0;
   out_5812090363690563332[448] = 0;
   out_5812090363690563332[449] = 0;
   out_5812090363690563332[450] = 0;
   out_5812090363690563332[451] = 0;
   out_5812090363690563332[452] = 0;
   out_5812090363690563332[453] = 0;
   out_5812090363690563332[454] = 0;
   out_5812090363690563332[455] = 0;
   out_5812090363690563332[456] = 0;
   out_5812090363690563332[457] = 0;
   out_5812090363690563332[458] = 0;
   out_5812090363690563332[459] = 0;
   out_5812090363690563332[460] = 0;
   out_5812090363690563332[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2226633546738004570) {
   out_2226633546738004570[0] = dt*state[7] + state[0];
   out_2226633546738004570[1] = dt*state[8] + state[1];
   out_2226633546738004570[2] = dt*state[9] + state[2];
   out_2226633546738004570[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2226633546738004570[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2226633546738004570[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2226633546738004570[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2226633546738004570[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2226633546738004570[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2226633546738004570[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2226633546738004570[10] = state[10];
   out_2226633546738004570[11] = state[11];
   out_2226633546738004570[12] = state[12];
   out_2226633546738004570[13] = state[13];
   out_2226633546738004570[14] = state[14];
   out_2226633546738004570[15] = state[15];
   out_2226633546738004570[16] = state[16];
   out_2226633546738004570[17] = state[17];
   out_2226633546738004570[18] = state[18];
   out_2226633546738004570[19] = state[19];
   out_2226633546738004570[20] = state[20];
   out_2226633546738004570[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4575541338218434693) {
   out_4575541338218434693[0] = 1;
   out_4575541338218434693[1] = 0;
   out_4575541338218434693[2] = 0;
   out_4575541338218434693[3] = 0;
   out_4575541338218434693[4] = 0;
   out_4575541338218434693[5] = 0;
   out_4575541338218434693[6] = dt;
   out_4575541338218434693[7] = 0;
   out_4575541338218434693[8] = 0;
   out_4575541338218434693[9] = 0;
   out_4575541338218434693[10] = 0;
   out_4575541338218434693[11] = 0;
   out_4575541338218434693[12] = 0;
   out_4575541338218434693[13] = 0;
   out_4575541338218434693[14] = 0;
   out_4575541338218434693[15] = 0;
   out_4575541338218434693[16] = 0;
   out_4575541338218434693[17] = 0;
   out_4575541338218434693[18] = 0;
   out_4575541338218434693[19] = 0;
   out_4575541338218434693[20] = 0;
   out_4575541338218434693[21] = 0;
   out_4575541338218434693[22] = 1;
   out_4575541338218434693[23] = 0;
   out_4575541338218434693[24] = 0;
   out_4575541338218434693[25] = 0;
   out_4575541338218434693[26] = 0;
   out_4575541338218434693[27] = 0;
   out_4575541338218434693[28] = dt;
   out_4575541338218434693[29] = 0;
   out_4575541338218434693[30] = 0;
   out_4575541338218434693[31] = 0;
   out_4575541338218434693[32] = 0;
   out_4575541338218434693[33] = 0;
   out_4575541338218434693[34] = 0;
   out_4575541338218434693[35] = 0;
   out_4575541338218434693[36] = 0;
   out_4575541338218434693[37] = 0;
   out_4575541338218434693[38] = 0;
   out_4575541338218434693[39] = 0;
   out_4575541338218434693[40] = 0;
   out_4575541338218434693[41] = 0;
   out_4575541338218434693[42] = 0;
   out_4575541338218434693[43] = 0;
   out_4575541338218434693[44] = 1;
   out_4575541338218434693[45] = 0;
   out_4575541338218434693[46] = 0;
   out_4575541338218434693[47] = 0;
   out_4575541338218434693[48] = 0;
   out_4575541338218434693[49] = 0;
   out_4575541338218434693[50] = dt;
   out_4575541338218434693[51] = 0;
   out_4575541338218434693[52] = 0;
   out_4575541338218434693[53] = 0;
   out_4575541338218434693[54] = 0;
   out_4575541338218434693[55] = 0;
   out_4575541338218434693[56] = 0;
   out_4575541338218434693[57] = 0;
   out_4575541338218434693[58] = 0;
   out_4575541338218434693[59] = 0;
   out_4575541338218434693[60] = 0;
   out_4575541338218434693[61] = 0;
   out_4575541338218434693[62] = 0;
   out_4575541338218434693[63] = 0;
   out_4575541338218434693[64] = 0;
   out_4575541338218434693[65] = 0;
   out_4575541338218434693[66] = 1;
   out_4575541338218434693[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4575541338218434693[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4575541338218434693[69] = 0;
   out_4575541338218434693[70] = 0;
   out_4575541338218434693[71] = 0;
   out_4575541338218434693[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4575541338218434693[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4575541338218434693[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4575541338218434693[75] = 0;
   out_4575541338218434693[76] = 0;
   out_4575541338218434693[77] = 0;
   out_4575541338218434693[78] = 0;
   out_4575541338218434693[79] = 0;
   out_4575541338218434693[80] = 0;
   out_4575541338218434693[81] = 0;
   out_4575541338218434693[82] = 0;
   out_4575541338218434693[83] = 0;
   out_4575541338218434693[84] = 0;
   out_4575541338218434693[85] = 0;
   out_4575541338218434693[86] = 0;
   out_4575541338218434693[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4575541338218434693[88] = 1;
   out_4575541338218434693[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4575541338218434693[90] = 0;
   out_4575541338218434693[91] = 0;
   out_4575541338218434693[92] = 0;
   out_4575541338218434693[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4575541338218434693[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4575541338218434693[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4575541338218434693[96] = 0;
   out_4575541338218434693[97] = 0;
   out_4575541338218434693[98] = 0;
   out_4575541338218434693[99] = 0;
   out_4575541338218434693[100] = 0;
   out_4575541338218434693[101] = 0;
   out_4575541338218434693[102] = 0;
   out_4575541338218434693[103] = 0;
   out_4575541338218434693[104] = 0;
   out_4575541338218434693[105] = 0;
   out_4575541338218434693[106] = 0;
   out_4575541338218434693[107] = 0;
   out_4575541338218434693[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4575541338218434693[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4575541338218434693[110] = 1;
   out_4575541338218434693[111] = 0;
   out_4575541338218434693[112] = 0;
   out_4575541338218434693[113] = 0;
   out_4575541338218434693[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4575541338218434693[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4575541338218434693[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4575541338218434693[117] = 0;
   out_4575541338218434693[118] = 0;
   out_4575541338218434693[119] = 0;
   out_4575541338218434693[120] = 0;
   out_4575541338218434693[121] = 0;
   out_4575541338218434693[122] = 0;
   out_4575541338218434693[123] = 0;
   out_4575541338218434693[124] = 0;
   out_4575541338218434693[125] = 0;
   out_4575541338218434693[126] = 0;
   out_4575541338218434693[127] = 0;
   out_4575541338218434693[128] = 0;
   out_4575541338218434693[129] = 0;
   out_4575541338218434693[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4575541338218434693[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4575541338218434693[132] = 1;
   out_4575541338218434693[133] = 0;
   out_4575541338218434693[134] = 0;
   out_4575541338218434693[135] = 0;
   out_4575541338218434693[136] = 0;
   out_4575541338218434693[137] = 0;
   out_4575541338218434693[138] = 0;
   out_4575541338218434693[139] = 0;
   out_4575541338218434693[140] = 0;
   out_4575541338218434693[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4575541338218434693[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4575541338218434693[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4575541338218434693[144] = 0;
   out_4575541338218434693[145] = 0;
   out_4575541338218434693[146] = 0;
   out_4575541338218434693[147] = 0;
   out_4575541338218434693[148] = 0;
   out_4575541338218434693[149] = 0;
   out_4575541338218434693[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4575541338218434693[151] = 0;
   out_4575541338218434693[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4575541338218434693[153] = 0;
   out_4575541338218434693[154] = 1;
   out_4575541338218434693[155] = 0;
   out_4575541338218434693[156] = 0;
   out_4575541338218434693[157] = 0;
   out_4575541338218434693[158] = 0;
   out_4575541338218434693[159] = 0;
   out_4575541338218434693[160] = 0;
   out_4575541338218434693[161] = 0;
   out_4575541338218434693[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4575541338218434693[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4575541338218434693[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4575541338218434693[165] = 0;
   out_4575541338218434693[166] = 0;
   out_4575541338218434693[167] = 0;
   out_4575541338218434693[168] = 0;
   out_4575541338218434693[169] = 0;
   out_4575541338218434693[170] = 0;
   out_4575541338218434693[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4575541338218434693[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4575541338218434693[173] = 0;
   out_4575541338218434693[174] = 0;
   out_4575541338218434693[175] = 0;
   out_4575541338218434693[176] = 1;
   out_4575541338218434693[177] = 0;
   out_4575541338218434693[178] = 0;
   out_4575541338218434693[179] = 0;
   out_4575541338218434693[180] = 0;
   out_4575541338218434693[181] = 0;
   out_4575541338218434693[182] = 0;
   out_4575541338218434693[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4575541338218434693[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4575541338218434693[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4575541338218434693[186] = 0;
   out_4575541338218434693[187] = 0;
   out_4575541338218434693[188] = 0;
   out_4575541338218434693[189] = 0;
   out_4575541338218434693[190] = 0;
   out_4575541338218434693[191] = 0;
   out_4575541338218434693[192] = 0;
   out_4575541338218434693[193] = 0;
   out_4575541338218434693[194] = 0;
   out_4575541338218434693[195] = 0;
   out_4575541338218434693[196] = 0;
   out_4575541338218434693[197] = 0;
   out_4575541338218434693[198] = 1;
   out_4575541338218434693[199] = 0;
   out_4575541338218434693[200] = 0;
   out_4575541338218434693[201] = 0;
   out_4575541338218434693[202] = 0;
   out_4575541338218434693[203] = 0;
   out_4575541338218434693[204] = 0;
   out_4575541338218434693[205] = 0;
   out_4575541338218434693[206] = 0;
   out_4575541338218434693[207] = 0;
   out_4575541338218434693[208] = 0;
   out_4575541338218434693[209] = 0;
   out_4575541338218434693[210] = 0;
   out_4575541338218434693[211] = 0;
   out_4575541338218434693[212] = 0;
   out_4575541338218434693[213] = 0;
   out_4575541338218434693[214] = 0;
   out_4575541338218434693[215] = 0;
   out_4575541338218434693[216] = 0;
   out_4575541338218434693[217] = 0;
   out_4575541338218434693[218] = 0;
   out_4575541338218434693[219] = 0;
   out_4575541338218434693[220] = 1;
   out_4575541338218434693[221] = 0;
   out_4575541338218434693[222] = 0;
   out_4575541338218434693[223] = 0;
   out_4575541338218434693[224] = 0;
   out_4575541338218434693[225] = 0;
   out_4575541338218434693[226] = 0;
   out_4575541338218434693[227] = 0;
   out_4575541338218434693[228] = 0;
   out_4575541338218434693[229] = 0;
   out_4575541338218434693[230] = 0;
   out_4575541338218434693[231] = 0;
   out_4575541338218434693[232] = 0;
   out_4575541338218434693[233] = 0;
   out_4575541338218434693[234] = 0;
   out_4575541338218434693[235] = 0;
   out_4575541338218434693[236] = 0;
   out_4575541338218434693[237] = 0;
   out_4575541338218434693[238] = 0;
   out_4575541338218434693[239] = 0;
   out_4575541338218434693[240] = 0;
   out_4575541338218434693[241] = 0;
   out_4575541338218434693[242] = 1;
   out_4575541338218434693[243] = 0;
   out_4575541338218434693[244] = 0;
   out_4575541338218434693[245] = 0;
   out_4575541338218434693[246] = 0;
   out_4575541338218434693[247] = 0;
   out_4575541338218434693[248] = 0;
   out_4575541338218434693[249] = 0;
   out_4575541338218434693[250] = 0;
   out_4575541338218434693[251] = 0;
   out_4575541338218434693[252] = 0;
   out_4575541338218434693[253] = 0;
   out_4575541338218434693[254] = 0;
   out_4575541338218434693[255] = 0;
   out_4575541338218434693[256] = 0;
   out_4575541338218434693[257] = 0;
   out_4575541338218434693[258] = 0;
   out_4575541338218434693[259] = 0;
   out_4575541338218434693[260] = 0;
   out_4575541338218434693[261] = 0;
   out_4575541338218434693[262] = 0;
   out_4575541338218434693[263] = 0;
   out_4575541338218434693[264] = 1;
   out_4575541338218434693[265] = 0;
   out_4575541338218434693[266] = 0;
   out_4575541338218434693[267] = 0;
   out_4575541338218434693[268] = 0;
   out_4575541338218434693[269] = 0;
   out_4575541338218434693[270] = 0;
   out_4575541338218434693[271] = 0;
   out_4575541338218434693[272] = 0;
   out_4575541338218434693[273] = 0;
   out_4575541338218434693[274] = 0;
   out_4575541338218434693[275] = 0;
   out_4575541338218434693[276] = 0;
   out_4575541338218434693[277] = 0;
   out_4575541338218434693[278] = 0;
   out_4575541338218434693[279] = 0;
   out_4575541338218434693[280] = 0;
   out_4575541338218434693[281] = 0;
   out_4575541338218434693[282] = 0;
   out_4575541338218434693[283] = 0;
   out_4575541338218434693[284] = 0;
   out_4575541338218434693[285] = 0;
   out_4575541338218434693[286] = 1;
   out_4575541338218434693[287] = 0;
   out_4575541338218434693[288] = 0;
   out_4575541338218434693[289] = 0;
   out_4575541338218434693[290] = 0;
   out_4575541338218434693[291] = 0;
   out_4575541338218434693[292] = 0;
   out_4575541338218434693[293] = 0;
   out_4575541338218434693[294] = 0;
   out_4575541338218434693[295] = 0;
   out_4575541338218434693[296] = 0;
   out_4575541338218434693[297] = 0;
   out_4575541338218434693[298] = 0;
   out_4575541338218434693[299] = 0;
   out_4575541338218434693[300] = 0;
   out_4575541338218434693[301] = 0;
   out_4575541338218434693[302] = 0;
   out_4575541338218434693[303] = 0;
   out_4575541338218434693[304] = 0;
   out_4575541338218434693[305] = 0;
   out_4575541338218434693[306] = 0;
   out_4575541338218434693[307] = 0;
   out_4575541338218434693[308] = 1;
   out_4575541338218434693[309] = 0;
   out_4575541338218434693[310] = 0;
   out_4575541338218434693[311] = 0;
   out_4575541338218434693[312] = 0;
   out_4575541338218434693[313] = 0;
   out_4575541338218434693[314] = 0;
   out_4575541338218434693[315] = 0;
   out_4575541338218434693[316] = 0;
   out_4575541338218434693[317] = 0;
   out_4575541338218434693[318] = 0;
   out_4575541338218434693[319] = 0;
   out_4575541338218434693[320] = 0;
   out_4575541338218434693[321] = 0;
   out_4575541338218434693[322] = 0;
   out_4575541338218434693[323] = 0;
   out_4575541338218434693[324] = 0;
   out_4575541338218434693[325] = 0;
   out_4575541338218434693[326] = 0;
   out_4575541338218434693[327] = 0;
   out_4575541338218434693[328] = 0;
   out_4575541338218434693[329] = 0;
   out_4575541338218434693[330] = 1;
   out_4575541338218434693[331] = 0;
   out_4575541338218434693[332] = 0;
   out_4575541338218434693[333] = 0;
   out_4575541338218434693[334] = 0;
   out_4575541338218434693[335] = 0;
   out_4575541338218434693[336] = 0;
   out_4575541338218434693[337] = 0;
   out_4575541338218434693[338] = 0;
   out_4575541338218434693[339] = 0;
   out_4575541338218434693[340] = 0;
   out_4575541338218434693[341] = 0;
   out_4575541338218434693[342] = 0;
   out_4575541338218434693[343] = 0;
   out_4575541338218434693[344] = 0;
   out_4575541338218434693[345] = 0;
   out_4575541338218434693[346] = 0;
   out_4575541338218434693[347] = 0;
   out_4575541338218434693[348] = 0;
   out_4575541338218434693[349] = 0;
   out_4575541338218434693[350] = 0;
   out_4575541338218434693[351] = 0;
   out_4575541338218434693[352] = 1;
   out_4575541338218434693[353] = 0;
   out_4575541338218434693[354] = 0;
   out_4575541338218434693[355] = 0;
   out_4575541338218434693[356] = 0;
   out_4575541338218434693[357] = 0;
   out_4575541338218434693[358] = 0;
   out_4575541338218434693[359] = 0;
   out_4575541338218434693[360] = 0;
   out_4575541338218434693[361] = 0;
   out_4575541338218434693[362] = 0;
   out_4575541338218434693[363] = 0;
   out_4575541338218434693[364] = 0;
   out_4575541338218434693[365] = 0;
   out_4575541338218434693[366] = 0;
   out_4575541338218434693[367] = 0;
   out_4575541338218434693[368] = 0;
   out_4575541338218434693[369] = 0;
   out_4575541338218434693[370] = 0;
   out_4575541338218434693[371] = 0;
   out_4575541338218434693[372] = 0;
   out_4575541338218434693[373] = 0;
   out_4575541338218434693[374] = 1;
   out_4575541338218434693[375] = 0;
   out_4575541338218434693[376] = 0;
   out_4575541338218434693[377] = 0;
   out_4575541338218434693[378] = 0;
   out_4575541338218434693[379] = 0;
   out_4575541338218434693[380] = 0;
   out_4575541338218434693[381] = 0;
   out_4575541338218434693[382] = 0;
   out_4575541338218434693[383] = 0;
   out_4575541338218434693[384] = 0;
   out_4575541338218434693[385] = 0;
   out_4575541338218434693[386] = 0;
   out_4575541338218434693[387] = 0;
   out_4575541338218434693[388] = 0;
   out_4575541338218434693[389] = 0;
   out_4575541338218434693[390] = 0;
   out_4575541338218434693[391] = 0;
   out_4575541338218434693[392] = 0;
   out_4575541338218434693[393] = 0;
   out_4575541338218434693[394] = 0;
   out_4575541338218434693[395] = 0;
   out_4575541338218434693[396] = 1;
   out_4575541338218434693[397] = 0;
   out_4575541338218434693[398] = 0;
   out_4575541338218434693[399] = 0;
   out_4575541338218434693[400] = 0;
   out_4575541338218434693[401] = 0;
   out_4575541338218434693[402] = 0;
   out_4575541338218434693[403] = 0;
   out_4575541338218434693[404] = 0;
   out_4575541338218434693[405] = 0;
   out_4575541338218434693[406] = 0;
   out_4575541338218434693[407] = 0;
   out_4575541338218434693[408] = 0;
   out_4575541338218434693[409] = 0;
   out_4575541338218434693[410] = 0;
   out_4575541338218434693[411] = 0;
   out_4575541338218434693[412] = 0;
   out_4575541338218434693[413] = 0;
   out_4575541338218434693[414] = 0;
   out_4575541338218434693[415] = 0;
   out_4575541338218434693[416] = 0;
   out_4575541338218434693[417] = 0;
   out_4575541338218434693[418] = 1;
   out_4575541338218434693[419] = 0;
   out_4575541338218434693[420] = 0;
   out_4575541338218434693[421] = 0;
   out_4575541338218434693[422] = 0;
   out_4575541338218434693[423] = 0;
   out_4575541338218434693[424] = 0;
   out_4575541338218434693[425] = 0;
   out_4575541338218434693[426] = 0;
   out_4575541338218434693[427] = 0;
   out_4575541338218434693[428] = 0;
   out_4575541338218434693[429] = 0;
   out_4575541338218434693[430] = 0;
   out_4575541338218434693[431] = 0;
   out_4575541338218434693[432] = 0;
   out_4575541338218434693[433] = 0;
   out_4575541338218434693[434] = 0;
   out_4575541338218434693[435] = 0;
   out_4575541338218434693[436] = 0;
   out_4575541338218434693[437] = 0;
   out_4575541338218434693[438] = 0;
   out_4575541338218434693[439] = 0;
   out_4575541338218434693[440] = 1;
}
void h_4(double *state, double *unused, double *out_4513987903818766867) {
   out_4513987903818766867[0] = state[10] + state[13];
   out_4513987903818766867[1] = state[11] + state[14];
   out_4513987903818766867[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3006032244282180376) {
   out_3006032244282180376[0] = 0;
   out_3006032244282180376[1] = 0;
   out_3006032244282180376[2] = 0;
   out_3006032244282180376[3] = 0;
   out_3006032244282180376[4] = 0;
   out_3006032244282180376[5] = 0;
   out_3006032244282180376[6] = 0;
   out_3006032244282180376[7] = 0;
   out_3006032244282180376[8] = 0;
   out_3006032244282180376[9] = 0;
   out_3006032244282180376[10] = 1;
   out_3006032244282180376[11] = 0;
   out_3006032244282180376[12] = 0;
   out_3006032244282180376[13] = 1;
   out_3006032244282180376[14] = 0;
   out_3006032244282180376[15] = 0;
   out_3006032244282180376[16] = 0;
   out_3006032244282180376[17] = 0;
   out_3006032244282180376[18] = 0;
   out_3006032244282180376[19] = 0;
   out_3006032244282180376[20] = 0;
   out_3006032244282180376[21] = 0;
   out_3006032244282180376[22] = 0;
   out_3006032244282180376[23] = 0;
   out_3006032244282180376[24] = 0;
   out_3006032244282180376[25] = 0;
   out_3006032244282180376[26] = 0;
   out_3006032244282180376[27] = 0;
   out_3006032244282180376[28] = 0;
   out_3006032244282180376[29] = 0;
   out_3006032244282180376[30] = 0;
   out_3006032244282180376[31] = 0;
   out_3006032244282180376[32] = 0;
   out_3006032244282180376[33] = 1;
   out_3006032244282180376[34] = 0;
   out_3006032244282180376[35] = 0;
   out_3006032244282180376[36] = 1;
   out_3006032244282180376[37] = 0;
   out_3006032244282180376[38] = 0;
   out_3006032244282180376[39] = 0;
   out_3006032244282180376[40] = 0;
   out_3006032244282180376[41] = 0;
   out_3006032244282180376[42] = 0;
   out_3006032244282180376[43] = 0;
   out_3006032244282180376[44] = 0;
   out_3006032244282180376[45] = 0;
   out_3006032244282180376[46] = 0;
   out_3006032244282180376[47] = 0;
   out_3006032244282180376[48] = 0;
   out_3006032244282180376[49] = 0;
   out_3006032244282180376[50] = 0;
   out_3006032244282180376[51] = 0;
   out_3006032244282180376[52] = 0;
   out_3006032244282180376[53] = 0;
   out_3006032244282180376[54] = 0;
   out_3006032244282180376[55] = 0;
   out_3006032244282180376[56] = 1;
   out_3006032244282180376[57] = 0;
   out_3006032244282180376[58] = 0;
   out_3006032244282180376[59] = 1;
   out_3006032244282180376[60] = 0;
   out_3006032244282180376[61] = 0;
   out_3006032244282180376[62] = 0;
   out_3006032244282180376[63] = 0;
   out_3006032244282180376[64] = 0;
   out_3006032244282180376[65] = 0;
}
void h_9(double *state, double *unused, double *out_4497000056462252294) {
   out_4497000056462252294[0] = state[10];
   out_4497000056462252294[1] = state[11];
   out_4497000056462252294[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1151135492072597107) {
   out_1151135492072597107[0] = 0;
   out_1151135492072597107[1] = 0;
   out_1151135492072597107[2] = 0;
   out_1151135492072597107[3] = 0;
   out_1151135492072597107[4] = 0;
   out_1151135492072597107[5] = 0;
   out_1151135492072597107[6] = 0;
   out_1151135492072597107[7] = 0;
   out_1151135492072597107[8] = 0;
   out_1151135492072597107[9] = 0;
   out_1151135492072597107[10] = 1;
   out_1151135492072597107[11] = 0;
   out_1151135492072597107[12] = 0;
   out_1151135492072597107[13] = 0;
   out_1151135492072597107[14] = 0;
   out_1151135492072597107[15] = 0;
   out_1151135492072597107[16] = 0;
   out_1151135492072597107[17] = 0;
   out_1151135492072597107[18] = 0;
   out_1151135492072597107[19] = 0;
   out_1151135492072597107[20] = 0;
   out_1151135492072597107[21] = 0;
   out_1151135492072597107[22] = 0;
   out_1151135492072597107[23] = 0;
   out_1151135492072597107[24] = 0;
   out_1151135492072597107[25] = 0;
   out_1151135492072597107[26] = 0;
   out_1151135492072597107[27] = 0;
   out_1151135492072597107[28] = 0;
   out_1151135492072597107[29] = 0;
   out_1151135492072597107[30] = 0;
   out_1151135492072597107[31] = 0;
   out_1151135492072597107[32] = 0;
   out_1151135492072597107[33] = 1;
   out_1151135492072597107[34] = 0;
   out_1151135492072597107[35] = 0;
   out_1151135492072597107[36] = 0;
   out_1151135492072597107[37] = 0;
   out_1151135492072597107[38] = 0;
   out_1151135492072597107[39] = 0;
   out_1151135492072597107[40] = 0;
   out_1151135492072597107[41] = 0;
   out_1151135492072597107[42] = 0;
   out_1151135492072597107[43] = 0;
   out_1151135492072597107[44] = 0;
   out_1151135492072597107[45] = 0;
   out_1151135492072597107[46] = 0;
   out_1151135492072597107[47] = 0;
   out_1151135492072597107[48] = 0;
   out_1151135492072597107[49] = 0;
   out_1151135492072597107[50] = 0;
   out_1151135492072597107[51] = 0;
   out_1151135492072597107[52] = 0;
   out_1151135492072597107[53] = 0;
   out_1151135492072597107[54] = 0;
   out_1151135492072597107[55] = 0;
   out_1151135492072597107[56] = 1;
   out_1151135492072597107[57] = 0;
   out_1151135492072597107[58] = 0;
   out_1151135492072597107[59] = 0;
   out_1151135492072597107[60] = 0;
   out_1151135492072597107[61] = 0;
   out_1151135492072597107[62] = 0;
   out_1151135492072597107[63] = 0;
   out_1151135492072597107[64] = 0;
   out_1151135492072597107[65] = 0;
}
void h_10(double *state, double *unused, double *out_5455532297231728723) {
   out_5455532297231728723[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5455532297231728723[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5455532297231728723[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5245411155410135023) {
   out_5245411155410135023[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5245411155410135023[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5245411155410135023[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5245411155410135023[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5245411155410135023[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5245411155410135023[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5245411155410135023[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5245411155410135023[7] = 0;
   out_5245411155410135023[8] = 0;
   out_5245411155410135023[9] = 0;
   out_5245411155410135023[10] = 0;
   out_5245411155410135023[11] = 0;
   out_5245411155410135023[12] = 0;
   out_5245411155410135023[13] = 0;
   out_5245411155410135023[14] = 0;
   out_5245411155410135023[15] = 0;
   out_5245411155410135023[16] = 1;
   out_5245411155410135023[17] = 0;
   out_5245411155410135023[18] = 0;
   out_5245411155410135023[19] = 1;
   out_5245411155410135023[20] = 0;
   out_5245411155410135023[21] = 0;
   out_5245411155410135023[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5245411155410135023[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5245411155410135023[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5245411155410135023[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5245411155410135023[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5245411155410135023[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5245411155410135023[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5245411155410135023[29] = 0;
   out_5245411155410135023[30] = 0;
   out_5245411155410135023[31] = 0;
   out_5245411155410135023[32] = 0;
   out_5245411155410135023[33] = 0;
   out_5245411155410135023[34] = 0;
   out_5245411155410135023[35] = 0;
   out_5245411155410135023[36] = 0;
   out_5245411155410135023[37] = 0;
   out_5245411155410135023[38] = 0;
   out_5245411155410135023[39] = 1;
   out_5245411155410135023[40] = 0;
   out_5245411155410135023[41] = 0;
   out_5245411155410135023[42] = 1;
   out_5245411155410135023[43] = 0;
   out_5245411155410135023[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5245411155410135023[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5245411155410135023[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5245411155410135023[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5245411155410135023[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5245411155410135023[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5245411155410135023[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5245411155410135023[51] = 0;
   out_5245411155410135023[52] = 0;
   out_5245411155410135023[53] = 0;
   out_5245411155410135023[54] = 0;
   out_5245411155410135023[55] = 0;
   out_5245411155410135023[56] = 0;
   out_5245411155410135023[57] = 0;
   out_5245411155410135023[58] = 0;
   out_5245411155410135023[59] = 0;
   out_5245411155410135023[60] = 0;
   out_5245411155410135023[61] = 0;
   out_5245411155410135023[62] = 1;
   out_5245411155410135023[63] = 0;
   out_5245411155410135023[64] = 0;
   out_5245411155410135023[65] = 1;
}
void h_12(double *state, double *unused, double *out_4655479116628509680) {
   out_4655479116628509680[0] = state[0];
   out_4655479116628509680[1] = state[1];
   out_4655479116628509680[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3627131269329774043) {
   out_3627131269329774043[0] = 1;
   out_3627131269329774043[1] = 0;
   out_3627131269329774043[2] = 0;
   out_3627131269329774043[3] = 0;
   out_3627131269329774043[4] = 0;
   out_3627131269329774043[5] = 0;
   out_3627131269329774043[6] = 0;
   out_3627131269329774043[7] = 0;
   out_3627131269329774043[8] = 0;
   out_3627131269329774043[9] = 0;
   out_3627131269329774043[10] = 0;
   out_3627131269329774043[11] = 0;
   out_3627131269329774043[12] = 0;
   out_3627131269329774043[13] = 0;
   out_3627131269329774043[14] = 0;
   out_3627131269329774043[15] = 0;
   out_3627131269329774043[16] = 0;
   out_3627131269329774043[17] = 0;
   out_3627131269329774043[18] = 0;
   out_3627131269329774043[19] = 0;
   out_3627131269329774043[20] = 0;
   out_3627131269329774043[21] = 0;
   out_3627131269329774043[22] = 0;
   out_3627131269329774043[23] = 1;
   out_3627131269329774043[24] = 0;
   out_3627131269329774043[25] = 0;
   out_3627131269329774043[26] = 0;
   out_3627131269329774043[27] = 0;
   out_3627131269329774043[28] = 0;
   out_3627131269329774043[29] = 0;
   out_3627131269329774043[30] = 0;
   out_3627131269329774043[31] = 0;
   out_3627131269329774043[32] = 0;
   out_3627131269329774043[33] = 0;
   out_3627131269329774043[34] = 0;
   out_3627131269329774043[35] = 0;
   out_3627131269329774043[36] = 0;
   out_3627131269329774043[37] = 0;
   out_3627131269329774043[38] = 0;
   out_3627131269329774043[39] = 0;
   out_3627131269329774043[40] = 0;
   out_3627131269329774043[41] = 0;
   out_3627131269329774043[42] = 0;
   out_3627131269329774043[43] = 0;
   out_3627131269329774043[44] = 0;
   out_3627131269329774043[45] = 0;
   out_3627131269329774043[46] = 1;
   out_3627131269329774043[47] = 0;
   out_3627131269329774043[48] = 0;
   out_3627131269329774043[49] = 0;
   out_3627131269329774043[50] = 0;
   out_3627131269329774043[51] = 0;
   out_3627131269329774043[52] = 0;
   out_3627131269329774043[53] = 0;
   out_3627131269329774043[54] = 0;
   out_3627131269329774043[55] = 0;
   out_3627131269329774043[56] = 0;
   out_3627131269329774043[57] = 0;
   out_3627131269329774043[58] = 0;
   out_3627131269329774043[59] = 0;
   out_3627131269329774043[60] = 0;
   out_3627131269329774043[61] = 0;
   out_3627131269329774043[62] = 0;
   out_3627131269329774043[63] = 0;
   out_3627131269329774043[64] = 0;
   out_3627131269329774043[65] = 0;
}
void h_35(double *state, double *unused, double *out_7899304017498886978) {
   out_7899304017498886978[0] = state[7];
   out_7899304017498886978[1] = state[8];
   out_7899304017498886978[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6372694301654787752) {
   out_6372694301654787752[0] = 0;
   out_6372694301654787752[1] = 0;
   out_6372694301654787752[2] = 0;
   out_6372694301654787752[3] = 0;
   out_6372694301654787752[4] = 0;
   out_6372694301654787752[5] = 0;
   out_6372694301654787752[6] = 0;
   out_6372694301654787752[7] = 1;
   out_6372694301654787752[8] = 0;
   out_6372694301654787752[9] = 0;
   out_6372694301654787752[10] = 0;
   out_6372694301654787752[11] = 0;
   out_6372694301654787752[12] = 0;
   out_6372694301654787752[13] = 0;
   out_6372694301654787752[14] = 0;
   out_6372694301654787752[15] = 0;
   out_6372694301654787752[16] = 0;
   out_6372694301654787752[17] = 0;
   out_6372694301654787752[18] = 0;
   out_6372694301654787752[19] = 0;
   out_6372694301654787752[20] = 0;
   out_6372694301654787752[21] = 0;
   out_6372694301654787752[22] = 0;
   out_6372694301654787752[23] = 0;
   out_6372694301654787752[24] = 0;
   out_6372694301654787752[25] = 0;
   out_6372694301654787752[26] = 0;
   out_6372694301654787752[27] = 0;
   out_6372694301654787752[28] = 0;
   out_6372694301654787752[29] = 0;
   out_6372694301654787752[30] = 1;
   out_6372694301654787752[31] = 0;
   out_6372694301654787752[32] = 0;
   out_6372694301654787752[33] = 0;
   out_6372694301654787752[34] = 0;
   out_6372694301654787752[35] = 0;
   out_6372694301654787752[36] = 0;
   out_6372694301654787752[37] = 0;
   out_6372694301654787752[38] = 0;
   out_6372694301654787752[39] = 0;
   out_6372694301654787752[40] = 0;
   out_6372694301654787752[41] = 0;
   out_6372694301654787752[42] = 0;
   out_6372694301654787752[43] = 0;
   out_6372694301654787752[44] = 0;
   out_6372694301654787752[45] = 0;
   out_6372694301654787752[46] = 0;
   out_6372694301654787752[47] = 0;
   out_6372694301654787752[48] = 0;
   out_6372694301654787752[49] = 0;
   out_6372694301654787752[50] = 0;
   out_6372694301654787752[51] = 0;
   out_6372694301654787752[52] = 0;
   out_6372694301654787752[53] = 1;
   out_6372694301654787752[54] = 0;
   out_6372694301654787752[55] = 0;
   out_6372694301654787752[56] = 0;
   out_6372694301654787752[57] = 0;
   out_6372694301654787752[58] = 0;
   out_6372694301654787752[59] = 0;
   out_6372694301654787752[60] = 0;
   out_6372694301654787752[61] = 0;
   out_6372694301654787752[62] = 0;
   out_6372694301654787752[63] = 0;
   out_6372694301654787752[64] = 0;
   out_6372694301654787752[65] = 0;
}
void h_32(double *state, double *unused, double *out_1305437905754740984) {
   out_1305437905754740984[0] = state[3];
   out_1305437905754740984[1] = state[4];
   out_1305437905754740984[2] = state[5];
   out_1305437905754740984[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8313532638987796553) {
   out_8313532638987796553[0] = 0;
   out_8313532638987796553[1] = 0;
   out_8313532638987796553[2] = 0;
   out_8313532638987796553[3] = 1;
   out_8313532638987796553[4] = 0;
   out_8313532638987796553[5] = 0;
   out_8313532638987796553[6] = 0;
   out_8313532638987796553[7] = 0;
   out_8313532638987796553[8] = 0;
   out_8313532638987796553[9] = 0;
   out_8313532638987796553[10] = 0;
   out_8313532638987796553[11] = 0;
   out_8313532638987796553[12] = 0;
   out_8313532638987796553[13] = 0;
   out_8313532638987796553[14] = 0;
   out_8313532638987796553[15] = 0;
   out_8313532638987796553[16] = 0;
   out_8313532638987796553[17] = 0;
   out_8313532638987796553[18] = 0;
   out_8313532638987796553[19] = 0;
   out_8313532638987796553[20] = 0;
   out_8313532638987796553[21] = 0;
   out_8313532638987796553[22] = 0;
   out_8313532638987796553[23] = 0;
   out_8313532638987796553[24] = 0;
   out_8313532638987796553[25] = 0;
   out_8313532638987796553[26] = 1;
   out_8313532638987796553[27] = 0;
   out_8313532638987796553[28] = 0;
   out_8313532638987796553[29] = 0;
   out_8313532638987796553[30] = 0;
   out_8313532638987796553[31] = 0;
   out_8313532638987796553[32] = 0;
   out_8313532638987796553[33] = 0;
   out_8313532638987796553[34] = 0;
   out_8313532638987796553[35] = 0;
   out_8313532638987796553[36] = 0;
   out_8313532638987796553[37] = 0;
   out_8313532638987796553[38] = 0;
   out_8313532638987796553[39] = 0;
   out_8313532638987796553[40] = 0;
   out_8313532638987796553[41] = 0;
   out_8313532638987796553[42] = 0;
   out_8313532638987796553[43] = 0;
   out_8313532638987796553[44] = 0;
   out_8313532638987796553[45] = 0;
   out_8313532638987796553[46] = 0;
   out_8313532638987796553[47] = 0;
   out_8313532638987796553[48] = 0;
   out_8313532638987796553[49] = 1;
   out_8313532638987796553[50] = 0;
   out_8313532638987796553[51] = 0;
   out_8313532638987796553[52] = 0;
   out_8313532638987796553[53] = 0;
   out_8313532638987796553[54] = 0;
   out_8313532638987796553[55] = 0;
   out_8313532638987796553[56] = 0;
   out_8313532638987796553[57] = 0;
   out_8313532638987796553[58] = 0;
   out_8313532638987796553[59] = 0;
   out_8313532638987796553[60] = 0;
   out_8313532638987796553[61] = 0;
   out_8313532638987796553[62] = 0;
   out_8313532638987796553[63] = 0;
   out_8313532638987796553[64] = 0;
   out_8313532638987796553[65] = 0;
   out_8313532638987796553[66] = 0;
   out_8313532638987796553[67] = 0;
   out_8313532638987796553[68] = 0;
   out_8313532638987796553[69] = 0;
   out_8313532638987796553[70] = 0;
   out_8313532638987796553[71] = 0;
   out_8313532638987796553[72] = 1;
   out_8313532638987796553[73] = 0;
   out_8313532638987796553[74] = 0;
   out_8313532638987796553[75] = 0;
   out_8313532638987796553[76] = 0;
   out_8313532638987796553[77] = 0;
   out_8313532638987796553[78] = 0;
   out_8313532638987796553[79] = 0;
   out_8313532638987796553[80] = 0;
   out_8313532638987796553[81] = 0;
   out_8313532638987796553[82] = 0;
   out_8313532638987796553[83] = 0;
   out_8313532638987796553[84] = 0;
   out_8313532638987796553[85] = 0;
   out_8313532638987796553[86] = 0;
   out_8313532638987796553[87] = 0;
}
void h_13(double *state, double *unused, double *out_4274492553746736382) {
   out_4274492553746736382[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4274492553746736382[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4274492553746736382[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1527371482146158470) {
   out_1527371482146158470[0] = 0;
   out_1527371482146158470[1] = 0;
   out_1527371482146158470[2] = 0;
   out_1527371482146158470[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1527371482146158470[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1527371482146158470[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1527371482146158470[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1527371482146158470[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1527371482146158470[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1527371482146158470[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1527371482146158470[10] = 0;
   out_1527371482146158470[11] = 0;
   out_1527371482146158470[12] = 0;
   out_1527371482146158470[13] = 0;
   out_1527371482146158470[14] = 0;
   out_1527371482146158470[15] = 0;
   out_1527371482146158470[16] = 0;
   out_1527371482146158470[17] = 0;
   out_1527371482146158470[18] = 0;
   out_1527371482146158470[19] = 0;
   out_1527371482146158470[20] = 0;
   out_1527371482146158470[21] = 0;
   out_1527371482146158470[22] = 0;
   out_1527371482146158470[23] = 0;
   out_1527371482146158470[24] = 0;
   out_1527371482146158470[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1527371482146158470[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1527371482146158470[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1527371482146158470[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1527371482146158470[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1527371482146158470[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1527371482146158470[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1527371482146158470[32] = 0;
   out_1527371482146158470[33] = 0;
   out_1527371482146158470[34] = 0;
   out_1527371482146158470[35] = 0;
   out_1527371482146158470[36] = 0;
   out_1527371482146158470[37] = 0;
   out_1527371482146158470[38] = 0;
   out_1527371482146158470[39] = 0;
   out_1527371482146158470[40] = 0;
   out_1527371482146158470[41] = 0;
   out_1527371482146158470[42] = 0;
   out_1527371482146158470[43] = 0;
   out_1527371482146158470[44] = 0;
   out_1527371482146158470[45] = 0;
   out_1527371482146158470[46] = 0;
   out_1527371482146158470[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1527371482146158470[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1527371482146158470[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1527371482146158470[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1527371482146158470[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1527371482146158470[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1527371482146158470[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1527371482146158470[54] = 0;
   out_1527371482146158470[55] = 0;
   out_1527371482146158470[56] = 0;
   out_1527371482146158470[57] = 0;
   out_1527371482146158470[58] = 0;
   out_1527371482146158470[59] = 0;
   out_1527371482146158470[60] = 0;
   out_1527371482146158470[61] = 0;
   out_1527371482146158470[62] = 0;
   out_1527371482146158470[63] = 0;
   out_1527371482146158470[64] = 0;
   out_1527371482146158470[65] = 0;
}
void h_14(double *state, double *unused, double *out_4497000056462252294) {
   out_4497000056462252294[0] = state[10];
   out_4497000056462252294[1] = state[11];
   out_4497000056462252294[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1151135492072597107) {
   out_1151135492072597107[0] = 0;
   out_1151135492072597107[1] = 0;
   out_1151135492072597107[2] = 0;
   out_1151135492072597107[3] = 0;
   out_1151135492072597107[4] = 0;
   out_1151135492072597107[5] = 0;
   out_1151135492072597107[6] = 0;
   out_1151135492072597107[7] = 0;
   out_1151135492072597107[8] = 0;
   out_1151135492072597107[9] = 0;
   out_1151135492072597107[10] = 1;
   out_1151135492072597107[11] = 0;
   out_1151135492072597107[12] = 0;
   out_1151135492072597107[13] = 0;
   out_1151135492072597107[14] = 0;
   out_1151135492072597107[15] = 0;
   out_1151135492072597107[16] = 0;
   out_1151135492072597107[17] = 0;
   out_1151135492072597107[18] = 0;
   out_1151135492072597107[19] = 0;
   out_1151135492072597107[20] = 0;
   out_1151135492072597107[21] = 0;
   out_1151135492072597107[22] = 0;
   out_1151135492072597107[23] = 0;
   out_1151135492072597107[24] = 0;
   out_1151135492072597107[25] = 0;
   out_1151135492072597107[26] = 0;
   out_1151135492072597107[27] = 0;
   out_1151135492072597107[28] = 0;
   out_1151135492072597107[29] = 0;
   out_1151135492072597107[30] = 0;
   out_1151135492072597107[31] = 0;
   out_1151135492072597107[32] = 0;
   out_1151135492072597107[33] = 1;
   out_1151135492072597107[34] = 0;
   out_1151135492072597107[35] = 0;
   out_1151135492072597107[36] = 0;
   out_1151135492072597107[37] = 0;
   out_1151135492072597107[38] = 0;
   out_1151135492072597107[39] = 0;
   out_1151135492072597107[40] = 0;
   out_1151135492072597107[41] = 0;
   out_1151135492072597107[42] = 0;
   out_1151135492072597107[43] = 0;
   out_1151135492072597107[44] = 0;
   out_1151135492072597107[45] = 0;
   out_1151135492072597107[46] = 0;
   out_1151135492072597107[47] = 0;
   out_1151135492072597107[48] = 0;
   out_1151135492072597107[49] = 0;
   out_1151135492072597107[50] = 0;
   out_1151135492072597107[51] = 0;
   out_1151135492072597107[52] = 0;
   out_1151135492072597107[53] = 0;
   out_1151135492072597107[54] = 0;
   out_1151135492072597107[55] = 0;
   out_1151135492072597107[56] = 1;
   out_1151135492072597107[57] = 0;
   out_1151135492072597107[58] = 0;
   out_1151135492072597107[59] = 0;
   out_1151135492072597107[60] = 0;
   out_1151135492072597107[61] = 0;
   out_1151135492072597107[62] = 0;
   out_1151135492072597107[63] = 0;
   out_1151135492072597107[64] = 0;
   out_1151135492072597107[65] = 0;
}
void h_33(double *state, double *unused, double *out_1621988405849377997) {
   out_1621988405849377997[0] = state[16];
   out_1621988405849377997[1] = state[17];
   out_1621988405849377997[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8923492767415906260) {
   out_8923492767415906260[0] = 0;
   out_8923492767415906260[1] = 0;
   out_8923492767415906260[2] = 0;
   out_8923492767415906260[3] = 0;
   out_8923492767415906260[4] = 0;
   out_8923492767415906260[5] = 0;
   out_8923492767415906260[6] = 0;
   out_8923492767415906260[7] = 0;
   out_8923492767415906260[8] = 0;
   out_8923492767415906260[9] = 0;
   out_8923492767415906260[10] = 0;
   out_8923492767415906260[11] = 0;
   out_8923492767415906260[12] = 0;
   out_8923492767415906260[13] = 0;
   out_8923492767415906260[14] = 0;
   out_8923492767415906260[15] = 0;
   out_8923492767415906260[16] = 1;
   out_8923492767415906260[17] = 0;
   out_8923492767415906260[18] = 0;
   out_8923492767415906260[19] = 0;
   out_8923492767415906260[20] = 0;
   out_8923492767415906260[21] = 0;
   out_8923492767415906260[22] = 0;
   out_8923492767415906260[23] = 0;
   out_8923492767415906260[24] = 0;
   out_8923492767415906260[25] = 0;
   out_8923492767415906260[26] = 0;
   out_8923492767415906260[27] = 0;
   out_8923492767415906260[28] = 0;
   out_8923492767415906260[29] = 0;
   out_8923492767415906260[30] = 0;
   out_8923492767415906260[31] = 0;
   out_8923492767415906260[32] = 0;
   out_8923492767415906260[33] = 0;
   out_8923492767415906260[34] = 0;
   out_8923492767415906260[35] = 0;
   out_8923492767415906260[36] = 0;
   out_8923492767415906260[37] = 0;
   out_8923492767415906260[38] = 0;
   out_8923492767415906260[39] = 1;
   out_8923492767415906260[40] = 0;
   out_8923492767415906260[41] = 0;
   out_8923492767415906260[42] = 0;
   out_8923492767415906260[43] = 0;
   out_8923492767415906260[44] = 0;
   out_8923492767415906260[45] = 0;
   out_8923492767415906260[46] = 0;
   out_8923492767415906260[47] = 0;
   out_8923492767415906260[48] = 0;
   out_8923492767415906260[49] = 0;
   out_8923492767415906260[50] = 0;
   out_8923492767415906260[51] = 0;
   out_8923492767415906260[52] = 0;
   out_8923492767415906260[53] = 0;
   out_8923492767415906260[54] = 0;
   out_8923492767415906260[55] = 0;
   out_8923492767415906260[56] = 0;
   out_8923492767415906260[57] = 0;
   out_8923492767415906260[58] = 0;
   out_8923492767415906260[59] = 0;
   out_8923492767415906260[60] = 0;
   out_8923492767415906260[61] = 0;
   out_8923492767415906260[62] = 1;
   out_8923492767415906260[63] = 0;
   out_8923492767415906260[64] = 0;
   out_8923492767415906260[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_203406506473517518) {
  H(in_vec, out_203406506473517518);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4842914450119463527) {
  err_fun(nom_x, delta_x, out_4842914450119463527);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5558287471497634478) {
  inv_err_fun(nom_x, true_x, out_5558287471497634478);
}
void live_H_mod_fun(double *state, double *out_5812090363690563332) {
  H_mod_fun(state, out_5812090363690563332);
}
void live_f_fun(double *state, double dt, double *out_2226633546738004570) {
  f_fun(state,  dt, out_2226633546738004570);
}
void live_F_fun(double *state, double dt, double *out_4575541338218434693) {
  F_fun(state,  dt, out_4575541338218434693);
}
void live_h_4(double *state, double *unused, double *out_4513987903818766867) {
  h_4(state, unused, out_4513987903818766867);
}
void live_H_4(double *state, double *unused, double *out_3006032244282180376) {
  H_4(state, unused, out_3006032244282180376);
}
void live_h_9(double *state, double *unused, double *out_4497000056462252294) {
  h_9(state, unused, out_4497000056462252294);
}
void live_H_9(double *state, double *unused, double *out_1151135492072597107) {
  H_9(state, unused, out_1151135492072597107);
}
void live_h_10(double *state, double *unused, double *out_5455532297231728723) {
  h_10(state, unused, out_5455532297231728723);
}
void live_H_10(double *state, double *unused, double *out_5245411155410135023) {
  H_10(state, unused, out_5245411155410135023);
}
void live_h_12(double *state, double *unused, double *out_4655479116628509680) {
  h_12(state, unused, out_4655479116628509680);
}
void live_H_12(double *state, double *unused, double *out_3627131269329774043) {
  H_12(state, unused, out_3627131269329774043);
}
void live_h_35(double *state, double *unused, double *out_7899304017498886978) {
  h_35(state, unused, out_7899304017498886978);
}
void live_H_35(double *state, double *unused, double *out_6372694301654787752) {
  H_35(state, unused, out_6372694301654787752);
}
void live_h_32(double *state, double *unused, double *out_1305437905754740984) {
  h_32(state, unused, out_1305437905754740984);
}
void live_H_32(double *state, double *unused, double *out_8313532638987796553) {
  H_32(state, unused, out_8313532638987796553);
}
void live_h_13(double *state, double *unused, double *out_4274492553746736382) {
  h_13(state, unused, out_4274492553746736382);
}
void live_H_13(double *state, double *unused, double *out_1527371482146158470) {
  H_13(state, unused, out_1527371482146158470);
}
void live_h_14(double *state, double *unused, double *out_4497000056462252294) {
  h_14(state, unused, out_4497000056462252294);
}
void live_H_14(double *state, double *unused, double *out_1151135492072597107) {
  H_14(state, unused, out_1151135492072597107);
}
void live_h_33(double *state, double *unused, double *out_1621988405849377997) {
  h_33(state, unused, out_1621988405849377997);
}
void live_H_33(double *state, double *unused, double *out_8923492767415906260) {
  H_33(state, unused, out_8923492767415906260);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
