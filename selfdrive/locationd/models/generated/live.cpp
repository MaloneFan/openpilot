#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8430055075784696659) {
   out_8430055075784696659[0] = 0;
   out_8430055075784696659[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8430055075784696659[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8430055075784696659[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8430055075784696659[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8430055075784696659[5] = -sin(in_vec[1]);
   out_8430055075784696659[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8430055075784696659[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8430055075784696659[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8430055075784696659[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8430055075784696659[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8430055075784696659[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8430055075784696659[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8430055075784696659[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8430055075784696659[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8430055075784696659[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8430055075784696659[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8430055075784696659[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3254368280690439304) {
   out_3254368280690439304[0] = delta_x[0] + nom_x[0];
   out_3254368280690439304[1] = delta_x[1] + nom_x[1];
   out_3254368280690439304[2] = delta_x[2] + nom_x[2];
   out_3254368280690439304[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3254368280690439304[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3254368280690439304[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3254368280690439304[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3254368280690439304[7] = delta_x[6] + nom_x[7];
   out_3254368280690439304[8] = delta_x[7] + nom_x[8];
   out_3254368280690439304[9] = delta_x[8] + nom_x[9];
   out_3254368280690439304[10] = delta_x[9] + nom_x[10];
   out_3254368280690439304[11] = delta_x[10] + nom_x[11];
   out_3254368280690439304[12] = delta_x[11] + nom_x[12];
   out_3254368280690439304[13] = delta_x[12] + nom_x[13];
   out_3254368280690439304[14] = delta_x[13] + nom_x[14];
   out_3254368280690439304[15] = delta_x[14] + nom_x[15];
   out_3254368280690439304[16] = delta_x[15] + nom_x[16];
   out_3254368280690439304[17] = delta_x[16] + nom_x[17];
   out_3254368280690439304[18] = delta_x[17] + nom_x[18];
   out_3254368280690439304[19] = delta_x[18] + nom_x[19];
   out_3254368280690439304[20] = delta_x[19] + nom_x[20];
   out_3254368280690439304[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8788489577648386071) {
   out_8788489577648386071[0] = -nom_x[0] + true_x[0];
   out_8788489577648386071[1] = -nom_x[1] + true_x[1];
   out_8788489577648386071[2] = -nom_x[2] + true_x[2];
   out_8788489577648386071[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8788489577648386071[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8788489577648386071[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8788489577648386071[6] = -nom_x[7] + true_x[7];
   out_8788489577648386071[7] = -nom_x[8] + true_x[8];
   out_8788489577648386071[8] = -nom_x[9] + true_x[9];
   out_8788489577648386071[9] = -nom_x[10] + true_x[10];
   out_8788489577648386071[10] = -nom_x[11] + true_x[11];
   out_8788489577648386071[11] = -nom_x[12] + true_x[12];
   out_8788489577648386071[12] = -nom_x[13] + true_x[13];
   out_8788489577648386071[13] = -nom_x[14] + true_x[14];
   out_8788489577648386071[14] = -nom_x[15] + true_x[15];
   out_8788489577648386071[15] = -nom_x[16] + true_x[16];
   out_8788489577648386071[16] = -nom_x[17] + true_x[17];
   out_8788489577648386071[17] = -nom_x[18] + true_x[18];
   out_8788489577648386071[18] = -nom_x[19] + true_x[19];
   out_8788489577648386071[19] = -nom_x[20] + true_x[20];
   out_8788489577648386071[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2792624268178059430) {
   out_2792624268178059430[0] = 1.0;
   out_2792624268178059430[1] = 0;
   out_2792624268178059430[2] = 0;
   out_2792624268178059430[3] = 0;
   out_2792624268178059430[4] = 0;
   out_2792624268178059430[5] = 0;
   out_2792624268178059430[6] = 0;
   out_2792624268178059430[7] = 0;
   out_2792624268178059430[8] = 0;
   out_2792624268178059430[9] = 0;
   out_2792624268178059430[10] = 0;
   out_2792624268178059430[11] = 0;
   out_2792624268178059430[12] = 0;
   out_2792624268178059430[13] = 0;
   out_2792624268178059430[14] = 0;
   out_2792624268178059430[15] = 0;
   out_2792624268178059430[16] = 0;
   out_2792624268178059430[17] = 0;
   out_2792624268178059430[18] = 0;
   out_2792624268178059430[19] = 0;
   out_2792624268178059430[20] = 0;
   out_2792624268178059430[21] = 0;
   out_2792624268178059430[22] = 1.0;
   out_2792624268178059430[23] = 0;
   out_2792624268178059430[24] = 0;
   out_2792624268178059430[25] = 0;
   out_2792624268178059430[26] = 0;
   out_2792624268178059430[27] = 0;
   out_2792624268178059430[28] = 0;
   out_2792624268178059430[29] = 0;
   out_2792624268178059430[30] = 0;
   out_2792624268178059430[31] = 0;
   out_2792624268178059430[32] = 0;
   out_2792624268178059430[33] = 0;
   out_2792624268178059430[34] = 0;
   out_2792624268178059430[35] = 0;
   out_2792624268178059430[36] = 0;
   out_2792624268178059430[37] = 0;
   out_2792624268178059430[38] = 0;
   out_2792624268178059430[39] = 0;
   out_2792624268178059430[40] = 0;
   out_2792624268178059430[41] = 0;
   out_2792624268178059430[42] = 0;
   out_2792624268178059430[43] = 0;
   out_2792624268178059430[44] = 1.0;
   out_2792624268178059430[45] = 0;
   out_2792624268178059430[46] = 0;
   out_2792624268178059430[47] = 0;
   out_2792624268178059430[48] = 0;
   out_2792624268178059430[49] = 0;
   out_2792624268178059430[50] = 0;
   out_2792624268178059430[51] = 0;
   out_2792624268178059430[52] = 0;
   out_2792624268178059430[53] = 0;
   out_2792624268178059430[54] = 0;
   out_2792624268178059430[55] = 0;
   out_2792624268178059430[56] = 0;
   out_2792624268178059430[57] = 0;
   out_2792624268178059430[58] = 0;
   out_2792624268178059430[59] = 0;
   out_2792624268178059430[60] = 0;
   out_2792624268178059430[61] = 0;
   out_2792624268178059430[62] = 0;
   out_2792624268178059430[63] = 0;
   out_2792624268178059430[64] = 0;
   out_2792624268178059430[65] = 0;
   out_2792624268178059430[66] = -0.5*state[4];
   out_2792624268178059430[67] = -0.5*state[5];
   out_2792624268178059430[68] = -0.5*state[6];
   out_2792624268178059430[69] = 0;
   out_2792624268178059430[70] = 0;
   out_2792624268178059430[71] = 0;
   out_2792624268178059430[72] = 0;
   out_2792624268178059430[73] = 0;
   out_2792624268178059430[74] = 0;
   out_2792624268178059430[75] = 0;
   out_2792624268178059430[76] = 0;
   out_2792624268178059430[77] = 0;
   out_2792624268178059430[78] = 0;
   out_2792624268178059430[79] = 0;
   out_2792624268178059430[80] = 0;
   out_2792624268178059430[81] = 0;
   out_2792624268178059430[82] = 0;
   out_2792624268178059430[83] = 0;
   out_2792624268178059430[84] = 0;
   out_2792624268178059430[85] = 0;
   out_2792624268178059430[86] = 0;
   out_2792624268178059430[87] = 0.5*state[3];
   out_2792624268178059430[88] = 0.5*state[6];
   out_2792624268178059430[89] = -0.5*state[5];
   out_2792624268178059430[90] = 0;
   out_2792624268178059430[91] = 0;
   out_2792624268178059430[92] = 0;
   out_2792624268178059430[93] = 0;
   out_2792624268178059430[94] = 0;
   out_2792624268178059430[95] = 0;
   out_2792624268178059430[96] = 0;
   out_2792624268178059430[97] = 0;
   out_2792624268178059430[98] = 0;
   out_2792624268178059430[99] = 0;
   out_2792624268178059430[100] = 0;
   out_2792624268178059430[101] = 0;
   out_2792624268178059430[102] = 0;
   out_2792624268178059430[103] = 0;
   out_2792624268178059430[104] = 0;
   out_2792624268178059430[105] = 0;
   out_2792624268178059430[106] = 0;
   out_2792624268178059430[107] = 0;
   out_2792624268178059430[108] = -0.5*state[6];
   out_2792624268178059430[109] = 0.5*state[3];
   out_2792624268178059430[110] = 0.5*state[4];
   out_2792624268178059430[111] = 0;
   out_2792624268178059430[112] = 0;
   out_2792624268178059430[113] = 0;
   out_2792624268178059430[114] = 0;
   out_2792624268178059430[115] = 0;
   out_2792624268178059430[116] = 0;
   out_2792624268178059430[117] = 0;
   out_2792624268178059430[118] = 0;
   out_2792624268178059430[119] = 0;
   out_2792624268178059430[120] = 0;
   out_2792624268178059430[121] = 0;
   out_2792624268178059430[122] = 0;
   out_2792624268178059430[123] = 0;
   out_2792624268178059430[124] = 0;
   out_2792624268178059430[125] = 0;
   out_2792624268178059430[126] = 0;
   out_2792624268178059430[127] = 0;
   out_2792624268178059430[128] = 0;
   out_2792624268178059430[129] = 0.5*state[5];
   out_2792624268178059430[130] = -0.5*state[4];
   out_2792624268178059430[131] = 0.5*state[3];
   out_2792624268178059430[132] = 0;
   out_2792624268178059430[133] = 0;
   out_2792624268178059430[134] = 0;
   out_2792624268178059430[135] = 0;
   out_2792624268178059430[136] = 0;
   out_2792624268178059430[137] = 0;
   out_2792624268178059430[138] = 0;
   out_2792624268178059430[139] = 0;
   out_2792624268178059430[140] = 0;
   out_2792624268178059430[141] = 0;
   out_2792624268178059430[142] = 0;
   out_2792624268178059430[143] = 0;
   out_2792624268178059430[144] = 0;
   out_2792624268178059430[145] = 0;
   out_2792624268178059430[146] = 0;
   out_2792624268178059430[147] = 0;
   out_2792624268178059430[148] = 0;
   out_2792624268178059430[149] = 0;
   out_2792624268178059430[150] = 0;
   out_2792624268178059430[151] = 0;
   out_2792624268178059430[152] = 0;
   out_2792624268178059430[153] = 1.0;
   out_2792624268178059430[154] = 0;
   out_2792624268178059430[155] = 0;
   out_2792624268178059430[156] = 0;
   out_2792624268178059430[157] = 0;
   out_2792624268178059430[158] = 0;
   out_2792624268178059430[159] = 0;
   out_2792624268178059430[160] = 0;
   out_2792624268178059430[161] = 0;
   out_2792624268178059430[162] = 0;
   out_2792624268178059430[163] = 0;
   out_2792624268178059430[164] = 0;
   out_2792624268178059430[165] = 0;
   out_2792624268178059430[166] = 0;
   out_2792624268178059430[167] = 0;
   out_2792624268178059430[168] = 0;
   out_2792624268178059430[169] = 0;
   out_2792624268178059430[170] = 0;
   out_2792624268178059430[171] = 0;
   out_2792624268178059430[172] = 0;
   out_2792624268178059430[173] = 0;
   out_2792624268178059430[174] = 0;
   out_2792624268178059430[175] = 1.0;
   out_2792624268178059430[176] = 0;
   out_2792624268178059430[177] = 0;
   out_2792624268178059430[178] = 0;
   out_2792624268178059430[179] = 0;
   out_2792624268178059430[180] = 0;
   out_2792624268178059430[181] = 0;
   out_2792624268178059430[182] = 0;
   out_2792624268178059430[183] = 0;
   out_2792624268178059430[184] = 0;
   out_2792624268178059430[185] = 0;
   out_2792624268178059430[186] = 0;
   out_2792624268178059430[187] = 0;
   out_2792624268178059430[188] = 0;
   out_2792624268178059430[189] = 0;
   out_2792624268178059430[190] = 0;
   out_2792624268178059430[191] = 0;
   out_2792624268178059430[192] = 0;
   out_2792624268178059430[193] = 0;
   out_2792624268178059430[194] = 0;
   out_2792624268178059430[195] = 0;
   out_2792624268178059430[196] = 0;
   out_2792624268178059430[197] = 1.0;
   out_2792624268178059430[198] = 0;
   out_2792624268178059430[199] = 0;
   out_2792624268178059430[200] = 0;
   out_2792624268178059430[201] = 0;
   out_2792624268178059430[202] = 0;
   out_2792624268178059430[203] = 0;
   out_2792624268178059430[204] = 0;
   out_2792624268178059430[205] = 0;
   out_2792624268178059430[206] = 0;
   out_2792624268178059430[207] = 0;
   out_2792624268178059430[208] = 0;
   out_2792624268178059430[209] = 0;
   out_2792624268178059430[210] = 0;
   out_2792624268178059430[211] = 0;
   out_2792624268178059430[212] = 0;
   out_2792624268178059430[213] = 0;
   out_2792624268178059430[214] = 0;
   out_2792624268178059430[215] = 0;
   out_2792624268178059430[216] = 0;
   out_2792624268178059430[217] = 0;
   out_2792624268178059430[218] = 0;
   out_2792624268178059430[219] = 1.0;
   out_2792624268178059430[220] = 0;
   out_2792624268178059430[221] = 0;
   out_2792624268178059430[222] = 0;
   out_2792624268178059430[223] = 0;
   out_2792624268178059430[224] = 0;
   out_2792624268178059430[225] = 0;
   out_2792624268178059430[226] = 0;
   out_2792624268178059430[227] = 0;
   out_2792624268178059430[228] = 0;
   out_2792624268178059430[229] = 0;
   out_2792624268178059430[230] = 0;
   out_2792624268178059430[231] = 0;
   out_2792624268178059430[232] = 0;
   out_2792624268178059430[233] = 0;
   out_2792624268178059430[234] = 0;
   out_2792624268178059430[235] = 0;
   out_2792624268178059430[236] = 0;
   out_2792624268178059430[237] = 0;
   out_2792624268178059430[238] = 0;
   out_2792624268178059430[239] = 0;
   out_2792624268178059430[240] = 0;
   out_2792624268178059430[241] = 1.0;
   out_2792624268178059430[242] = 0;
   out_2792624268178059430[243] = 0;
   out_2792624268178059430[244] = 0;
   out_2792624268178059430[245] = 0;
   out_2792624268178059430[246] = 0;
   out_2792624268178059430[247] = 0;
   out_2792624268178059430[248] = 0;
   out_2792624268178059430[249] = 0;
   out_2792624268178059430[250] = 0;
   out_2792624268178059430[251] = 0;
   out_2792624268178059430[252] = 0;
   out_2792624268178059430[253] = 0;
   out_2792624268178059430[254] = 0;
   out_2792624268178059430[255] = 0;
   out_2792624268178059430[256] = 0;
   out_2792624268178059430[257] = 0;
   out_2792624268178059430[258] = 0;
   out_2792624268178059430[259] = 0;
   out_2792624268178059430[260] = 0;
   out_2792624268178059430[261] = 0;
   out_2792624268178059430[262] = 0;
   out_2792624268178059430[263] = 1.0;
   out_2792624268178059430[264] = 0;
   out_2792624268178059430[265] = 0;
   out_2792624268178059430[266] = 0;
   out_2792624268178059430[267] = 0;
   out_2792624268178059430[268] = 0;
   out_2792624268178059430[269] = 0;
   out_2792624268178059430[270] = 0;
   out_2792624268178059430[271] = 0;
   out_2792624268178059430[272] = 0;
   out_2792624268178059430[273] = 0;
   out_2792624268178059430[274] = 0;
   out_2792624268178059430[275] = 0;
   out_2792624268178059430[276] = 0;
   out_2792624268178059430[277] = 0;
   out_2792624268178059430[278] = 0;
   out_2792624268178059430[279] = 0;
   out_2792624268178059430[280] = 0;
   out_2792624268178059430[281] = 0;
   out_2792624268178059430[282] = 0;
   out_2792624268178059430[283] = 0;
   out_2792624268178059430[284] = 0;
   out_2792624268178059430[285] = 1.0;
   out_2792624268178059430[286] = 0;
   out_2792624268178059430[287] = 0;
   out_2792624268178059430[288] = 0;
   out_2792624268178059430[289] = 0;
   out_2792624268178059430[290] = 0;
   out_2792624268178059430[291] = 0;
   out_2792624268178059430[292] = 0;
   out_2792624268178059430[293] = 0;
   out_2792624268178059430[294] = 0;
   out_2792624268178059430[295] = 0;
   out_2792624268178059430[296] = 0;
   out_2792624268178059430[297] = 0;
   out_2792624268178059430[298] = 0;
   out_2792624268178059430[299] = 0;
   out_2792624268178059430[300] = 0;
   out_2792624268178059430[301] = 0;
   out_2792624268178059430[302] = 0;
   out_2792624268178059430[303] = 0;
   out_2792624268178059430[304] = 0;
   out_2792624268178059430[305] = 0;
   out_2792624268178059430[306] = 0;
   out_2792624268178059430[307] = 1.0;
   out_2792624268178059430[308] = 0;
   out_2792624268178059430[309] = 0;
   out_2792624268178059430[310] = 0;
   out_2792624268178059430[311] = 0;
   out_2792624268178059430[312] = 0;
   out_2792624268178059430[313] = 0;
   out_2792624268178059430[314] = 0;
   out_2792624268178059430[315] = 0;
   out_2792624268178059430[316] = 0;
   out_2792624268178059430[317] = 0;
   out_2792624268178059430[318] = 0;
   out_2792624268178059430[319] = 0;
   out_2792624268178059430[320] = 0;
   out_2792624268178059430[321] = 0;
   out_2792624268178059430[322] = 0;
   out_2792624268178059430[323] = 0;
   out_2792624268178059430[324] = 0;
   out_2792624268178059430[325] = 0;
   out_2792624268178059430[326] = 0;
   out_2792624268178059430[327] = 0;
   out_2792624268178059430[328] = 0;
   out_2792624268178059430[329] = 1.0;
   out_2792624268178059430[330] = 0;
   out_2792624268178059430[331] = 0;
   out_2792624268178059430[332] = 0;
   out_2792624268178059430[333] = 0;
   out_2792624268178059430[334] = 0;
   out_2792624268178059430[335] = 0;
   out_2792624268178059430[336] = 0;
   out_2792624268178059430[337] = 0;
   out_2792624268178059430[338] = 0;
   out_2792624268178059430[339] = 0;
   out_2792624268178059430[340] = 0;
   out_2792624268178059430[341] = 0;
   out_2792624268178059430[342] = 0;
   out_2792624268178059430[343] = 0;
   out_2792624268178059430[344] = 0;
   out_2792624268178059430[345] = 0;
   out_2792624268178059430[346] = 0;
   out_2792624268178059430[347] = 0;
   out_2792624268178059430[348] = 0;
   out_2792624268178059430[349] = 0;
   out_2792624268178059430[350] = 0;
   out_2792624268178059430[351] = 1.0;
   out_2792624268178059430[352] = 0;
   out_2792624268178059430[353] = 0;
   out_2792624268178059430[354] = 0;
   out_2792624268178059430[355] = 0;
   out_2792624268178059430[356] = 0;
   out_2792624268178059430[357] = 0;
   out_2792624268178059430[358] = 0;
   out_2792624268178059430[359] = 0;
   out_2792624268178059430[360] = 0;
   out_2792624268178059430[361] = 0;
   out_2792624268178059430[362] = 0;
   out_2792624268178059430[363] = 0;
   out_2792624268178059430[364] = 0;
   out_2792624268178059430[365] = 0;
   out_2792624268178059430[366] = 0;
   out_2792624268178059430[367] = 0;
   out_2792624268178059430[368] = 0;
   out_2792624268178059430[369] = 0;
   out_2792624268178059430[370] = 0;
   out_2792624268178059430[371] = 0;
   out_2792624268178059430[372] = 0;
   out_2792624268178059430[373] = 1.0;
   out_2792624268178059430[374] = 0;
   out_2792624268178059430[375] = 0;
   out_2792624268178059430[376] = 0;
   out_2792624268178059430[377] = 0;
   out_2792624268178059430[378] = 0;
   out_2792624268178059430[379] = 0;
   out_2792624268178059430[380] = 0;
   out_2792624268178059430[381] = 0;
   out_2792624268178059430[382] = 0;
   out_2792624268178059430[383] = 0;
   out_2792624268178059430[384] = 0;
   out_2792624268178059430[385] = 0;
   out_2792624268178059430[386] = 0;
   out_2792624268178059430[387] = 0;
   out_2792624268178059430[388] = 0;
   out_2792624268178059430[389] = 0;
   out_2792624268178059430[390] = 0;
   out_2792624268178059430[391] = 0;
   out_2792624268178059430[392] = 0;
   out_2792624268178059430[393] = 0;
   out_2792624268178059430[394] = 0;
   out_2792624268178059430[395] = 1.0;
   out_2792624268178059430[396] = 0;
   out_2792624268178059430[397] = 0;
   out_2792624268178059430[398] = 0;
   out_2792624268178059430[399] = 0;
   out_2792624268178059430[400] = 0;
   out_2792624268178059430[401] = 0;
   out_2792624268178059430[402] = 0;
   out_2792624268178059430[403] = 0;
   out_2792624268178059430[404] = 0;
   out_2792624268178059430[405] = 0;
   out_2792624268178059430[406] = 0;
   out_2792624268178059430[407] = 0;
   out_2792624268178059430[408] = 0;
   out_2792624268178059430[409] = 0;
   out_2792624268178059430[410] = 0;
   out_2792624268178059430[411] = 0;
   out_2792624268178059430[412] = 0;
   out_2792624268178059430[413] = 0;
   out_2792624268178059430[414] = 0;
   out_2792624268178059430[415] = 0;
   out_2792624268178059430[416] = 0;
   out_2792624268178059430[417] = 1.0;
   out_2792624268178059430[418] = 0;
   out_2792624268178059430[419] = 0;
   out_2792624268178059430[420] = 0;
   out_2792624268178059430[421] = 0;
   out_2792624268178059430[422] = 0;
   out_2792624268178059430[423] = 0;
   out_2792624268178059430[424] = 0;
   out_2792624268178059430[425] = 0;
   out_2792624268178059430[426] = 0;
   out_2792624268178059430[427] = 0;
   out_2792624268178059430[428] = 0;
   out_2792624268178059430[429] = 0;
   out_2792624268178059430[430] = 0;
   out_2792624268178059430[431] = 0;
   out_2792624268178059430[432] = 0;
   out_2792624268178059430[433] = 0;
   out_2792624268178059430[434] = 0;
   out_2792624268178059430[435] = 0;
   out_2792624268178059430[436] = 0;
   out_2792624268178059430[437] = 0;
   out_2792624268178059430[438] = 0;
   out_2792624268178059430[439] = 1.0;
   out_2792624268178059430[440] = 0;
   out_2792624268178059430[441] = 0;
   out_2792624268178059430[442] = 0;
   out_2792624268178059430[443] = 0;
   out_2792624268178059430[444] = 0;
   out_2792624268178059430[445] = 0;
   out_2792624268178059430[446] = 0;
   out_2792624268178059430[447] = 0;
   out_2792624268178059430[448] = 0;
   out_2792624268178059430[449] = 0;
   out_2792624268178059430[450] = 0;
   out_2792624268178059430[451] = 0;
   out_2792624268178059430[452] = 0;
   out_2792624268178059430[453] = 0;
   out_2792624268178059430[454] = 0;
   out_2792624268178059430[455] = 0;
   out_2792624268178059430[456] = 0;
   out_2792624268178059430[457] = 0;
   out_2792624268178059430[458] = 0;
   out_2792624268178059430[459] = 0;
   out_2792624268178059430[460] = 0;
   out_2792624268178059430[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5459361766403996839) {
   out_5459361766403996839[0] = dt*state[7] + state[0];
   out_5459361766403996839[1] = dt*state[8] + state[1];
   out_5459361766403996839[2] = dt*state[9] + state[2];
   out_5459361766403996839[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5459361766403996839[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5459361766403996839[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5459361766403996839[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5459361766403996839[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5459361766403996839[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5459361766403996839[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5459361766403996839[10] = state[10];
   out_5459361766403996839[11] = state[11];
   out_5459361766403996839[12] = state[12];
   out_5459361766403996839[13] = state[13];
   out_5459361766403996839[14] = state[14];
   out_5459361766403996839[15] = state[15];
   out_5459361766403996839[16] = state[16];
   out_5459361766403996839[17] = state[17];
   out_5459361766403996839[18] = state[18];
   out_5459361766403996839[19] = state[19];
   out_5459361766403996839[20] = state[20];
   out_5459361766403996839[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4154060615378714711) {
   out_4154060615378714711[0] = 1;
   out_4154060615378714711[1] = 0;
   out_4154060615378714711[2] = 0;
   out_4154060615378714711[3] = 0;
   out_4154060615378714711[4] = 0;
   out_4154060615378714711[5] = 0;
   out_4154060615378714711[6] = dt;
   out_4154060615378714711[7] = 0;
   out_4154060615378714711[8] = 0;
   out_4154060615378714711[9] = 0;
   out_4154060615378714711[10] = 0;
   out_4154060615378714711[11] = 0;
   out_4154060615378714711[12] = 0;
   out_4154060615378714711[13] = 0;
   out_4154060615378714711[14] = 0;
   out_4154060615378714711[15] = 0;
   out_4154060615378714711[16] = 0;
   out_4154060615378714711[17] = 0;
   out_4154060615378714711[18] = 0;
   out_4154060615378714711[19] = 0;
   out_4154060615378714711[20] = 0;
   out_4154060615378714711[21] = 0;
   out_4154060615378714711[22] = 1;
   out_4154060615378714711[23] = 0;
   out_4154060615378714711[24] = 0;
   out_4154060615378714711[25] = 0;
   out_4154060615378714711[26] = 0;
   out_4154060615378714711[27] = 0;
   out_4154060615378714711[28] = dt;
   out_4154060615378714711[29] = 0;
   out_4154060615378714711[30] = 0;
   out_4154060615378714711[31] = 0;
   out_4154060615378714711[32] = 0;
   out_4154060615378714711[33] = 0;
   out_4154060615378714711[34] = 0;
   out_4154060615378714711[35] = 0;
   out_4154060615378714711[36] = 0;
   out_4154060615378714711[37] = 0;
   out_4154060615378714711[38] = 0;
   out_4154060615378714711[39] = 0;
   out_4154060615378714711[40] = 0;
   out_4154060615378714711[41] = 0;
   out_4154060615378714711[42] = 0;
   out_4154060615378714711[43] = 0;
   out_4154060615378714711[44] = 1;
   out_4154060615378714711[45] = 0;
   out_4154060615378714711[46] = 0;
   out_4154060615378714711[47] = 0;
   out_4154060615378714711[48] = 0;
   out_4154060615378714711[49] = 0;
   out_4154060615378714711[50] = dt;
   out_4154060615378714711[51] = 0;
   out_4154060615378714711[52] = 0;
   out_4154060615378714711[53] = 0;
   out_4154060615378714711[54] = 0;
   out_4154060615378714711[55] = 0;
   out_4154060615378714711[56] = 0;
   out_4154060615378714711[57] = 0;
   out_4154060615378714711[58] = 0;
   out_4154060615378714711[59] = 0;
   out_4154060615378714711[60] = 0;
   out_4154060615378714711[61] = 0;
   out_4154060615378714711[62] = 0;
   out_4154060615378714711[63] = 0;
   out_4154060615378714711[64] = 0;
   out_4154060615378714711[65] = 0;
   out_4154060615378714711[66] = 1;
   out_4154060615378714711[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4154060615378714711[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4154060615378714711[69] = 0;
   out_4154060615378714711[70] = 0;
   out_4154060615378714711[71] = 0;
   out_4154060615378714711[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4154060615378714711[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4154060615378714711[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4154060615378714711[75] = 0;
   out_4154060615378714711[76] = 0;
   out_4154060615378714711[77] = 0;
   out_4154060615378714711[78] = 0;
   out_4154060615378714711[79] = 0;
   out_4154060615378714711[80] = 0;
   out_4154060615378714711[81] = 0;
   out_4154060615378714711[82] = 0;
   out_4154060615378714711[83] = 0;
   out_4154060615378714711[84] = 0;
   out_4154060615378714711[85] = 0;
   out_4154060615378714711[86] = 0;
   out_4154060615378714711[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4154060615378714711[88] = 1;
   out_4154060615378714711[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4154060615378714711[90] = 0;
   out_4154060615378714711[91] = 0;
   out_4154060615378714711[92] = 0;
   out_4154060615378714711[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4154060615378714711[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4154060615378714711[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4154060615378714711[96] = 0;
   out_4154060615378714711[97] = 0;
   out_4154060615378714711[98] = 0;
   out_4154060615378714711[99] = 0;
   out_4154060615378714711[100] = 0;
   out_4154060615378714711[101] = 0;
   out_4154060615378714711[102] = 0;
   out_4154060615378714711[103] = 0;
   out_4154060615378714711[104] = 0;
   out_4154060615378714711[105] = 0;
   out_4154060615378714711[106] = 0;
   out_4154060615378714711[107] = 0;
   out_4154060615378714711[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4154060615378714711[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4154060615378714711[110] = 1;
   out_4154060615378714711[111] = 0;
   out_4154060615378714711[112] = 0;
   out_4154060615378714711[113] = 0;
   out_4154060615378714711[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4154060615378714711[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4154060615378714711[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4154060615378714711[117] = 0;
   out_4154060615378714711[118] = 0;
   out_4154060615378714711[119] = 0;
   out_4154060615378714711[120] = 0;
   out_4154060615378714711[121] = 0;
   out_4154060615378714711[122] = 0;
   out_4154060615378714711[123] = 0;
   out_4154060615378714711[124] = 0;
   out_4154060615378714711[125] = 0;
   out_4154060615378714711[126] = 0;
   out_4154060615378714711[127] = 0;
   out_4154060615378714711[128] = 0;
   out_4154060615378714711[129] = 0;
   out_4154060615378714711[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4154060615378714711[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4154060615378714711[132] = 1;
   out_4154060615378714711[133] = 0;
   out_4154060615378714711[134] = 0;
   out_4154060615378714711[135] = 0;
   out_4154060615378714711[136] = 0;
   out_4154060615378714711[137] = 0;
   out_4154060615378714711[138] = 0;
   out_4154060615378714711[139] = 0;
   out_4154060615378714711[140] = 0;
   out_4154060615378714711[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4154060615378714711[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4154060615378714711[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4154060615378714711[144] = 0;
   out_4154060615378714711[145] = 0;
   out_4154060615378714711[146] = 0;
   out_4154060615378714711[147] = 0;
   out_4154060615378714711[148] = 0;
   out_4154060615378714711[149] = 0;
   out_4154060615378714711[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4154060615378714711[151] = 0;
   out_4154060615378714711[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4154060615378714711[153] = 0;
   out_4154060615378714711[154] = 1;
   out_4154060615378714711[155] = 0;
   out_4154060615378714711[156] = 0;
   out_4154060615378714711[157] = 0;
   out_4154060615378714711[158] = 0;
   out_4154060615378714711[159] = 0;
   out_4154060615378714711[160] = 0;
   out_4154060615378714711[161] = 0;
   out_4154060615378714711[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4154060615378714711[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4154060615378714711[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4154060615378714711[165] = 0;
   out_4154060615378714711[166] = 0;
   out_4154060615378714711[167] = 0;
   out_4154060615378714711[168] = 0;
   out_4154060615378714711[169] = 0;
   out_4154060615378714711[170] = 0;
   out_4154060615378714711[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4154060615378714711[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4154060615378714711[173] = 0;
   out_4154060615378714711[174] = 0;
   out_4154060615378714711[175] = 0;
   out_4154060615378714711[176] = 1;
   out_4154060615378714711[177] = 0;
   out_4154060615378714711[178] = 0;
   out_4154060615378714711[179] = 0;
   out_4154060615378714711[180] = 0;
   out_4154060615378714711[181] = 0;
   out_4154060615378714711[182] = 0;
   out_4154060615378714711[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4154060615378714711[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4154060615378714711[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4154060615378714711[186] = 0;
   out_4154060615378714711[187] = 0;
   out_4154060615378714711[188] = 0;
   out_4154060615378714711[189] = 0;
   out_4154060615378714711[190] = 0;
   out_4154060615378714711[191] = 0;
   out_4154060615378714711[192] = 0;
   out_4154060615378714711[193] = 0;
   out_4154060615378714711[194] = 0;
   out_4154060615378714711[195] = 0;
   out_4154060615378714711[196] = 0;
   out_4154060615378714711[197] = 0;
   out_4154060615378714711[198] = 1;
   out_4154060615378714711[199] = 0;
   out_4154060615378714711[200] = 0;
   out_4154060615378714711[201] = 0;
   out_4154060615378714711[202] = 0;
   out_4154060615378714711[203] = 0;
   out_4154060615378714711[204] = 0;
   out_4154060615378714711[205] = 0;
   out_4154060615378714711[206] = 0;
   out_4154060615378714711[207] = 0;
   out_4154060615378714711[208] = 0;
   out_4154060615378714711[209] = 0;
   out_4154060615378714711[210] = 0;
   out_4154060615378714711[211] = 0;
   out_4154060615378714711[212] = 0;
   out_4154060615378714711[213] = 0;
   out_4154060615378714711[214] = 0;
   out_4154060615378714711[215] = 0;
   out_4154060615378714711[216] = 0;
   out_4154060615378714711[217] = 0;
   out_4154060615378714711[218] = 0;
   out_4154060615378714711[219] = 0;
   out_4154060615378714711[220] = 1;
   out_4154060615378714711[221] = 0;
   out_4154060615378714711[222] = 0;
   out_4154060615378714711[223] = 0;
   out_4154060615378714711[224] = 0;
   out_4154060615378714711[225] = 0;
   out_4154060615378714711[226] = 0;
   out_4154060615378714711[227] = 0;
   out_4154060615378714711[228] = 0;
   out_4154060615378714711[229] = 0;
   out_4154060615378714711[230] = 0;
   out_4154060615378714711[231] = 0;
   out_4154060615378714711[232] = 0;
   out_4154060615378714711[233] = 0;
   out_4154060615378714711[234] = 0;
   out_4154060615378714711[235] = 0;
   out_4154060615378714711[236] = 0;
   out_4154060615378714711[237] = 0;
   out_4154060615378714711[238] = 0;
   out_4154060615378714711[239] = 0;
   out_4154060615378714711[240] = 0;
   out_4154060615378714711[241] = 0;
   out_4154060615378714711[242] = 1;
   out_4154060615378714711[243] = 0;
   out_4154060615378714711[244] = 0;
   out_4154060615378714711[245] = 0;
   out_4154060615378714711[246] = 0;
   out_4154060615378714711[247] = 0;
   out_4154060615378714711[248] = 0;
   out_4154060615378714711[249] = 0;
   out_4154060615378714711[250] = 0;
   out_4154060615378714711[251] = 0;
   out_4154060615378714711[252] = 0;
   out_4154060615378714711[253] = 0;
   out_4154060615378714711[254] = 0;
   out_4154060615378714711[255] = 0;
   out_4154060615378714711[256] = 0;
   out_4154060615378714711[257] = 0;
   out_4154060615378714711[258] = 0;
   out_4154060615378714711[259] = 0;
   out_4154060615378714711[260] = 0;
   out_4154060615378714711[261] = 0;
   out_4154060615378714711[262] = 0;
   out_4154060615378714711[263] = 0;
   out_4154060615378714711[264] = 1;
   out_4154060615378714711[265] = 0;
   out_4154060615378714711[266] = 0;
   out_4154060615378714711[267] = 0;
   out_4154060615378714711[268] = 0;
   out_4154060615378714711[269] = 0;
   out_4154060615378714711[270] = 0;
   out_4154060615378714711[271] = 0;
   out_4154060615378714711[272] = 0;
   out_4154060615378714711[273] = 0;
   out_4154060615378714711[274] = 0;
   out_4154060615378714711[275] = 0;
   out_4154060615378714711[276] = 0;
   out_4154060615378714711[277] = 0;
   out_4154060615378714711[278] = 0;
   out_4154060615378714711[279] = 0;
   out_4154060615378714711[280] = 0;
   out_4154060615378714711[281] = 0;
   out_4154060615378714711[282] = 0;
   out_4154060615378714711[283] = 0;
   out_4154060615378714711[284] = 0;
   out_4154060615378714711[285] = 0;
   out_4154060615378714711[286] = 1;
   out_4154060615378714711[287] = 0;
   out_4154060615378714711[288] = 0;
   out_4154060615378714711[289] = 0;
   out_4154060615378714711[290] = 0;
   out_4154060615378714711[291] = 0;
   out_4154060615378714711[292] = 0;
   out_4154060615378714711[293] = 0;
   out_4154060615378714711[294] = 0;
   out_4154060615378714711[295] = 0;
   out_4154060615378714711[296] = 0;
   out_4154060615378714711[297] = 0;
   out_4154060615378714711[298] = 0;
   out_4154060615378714711[299] = 0;
   out_4154060615378714711[300] = 0;
   out_4154060615378714711[301] = 0;
   out_4154060615378714711[302] = 0;
   out_4154060615378714711[303] = 0;
   out_4154060615378714711[304] = 0;
   out_4154060615378714711[305] = 0;
   out_4154060615378714711[306] = 0;
   out_4154060615378714711[307] = 0;
   out_4154060615378714711[308] = 1;
   out_4154060615378714711[309] = 0;
   out_4154060615378714711[310] = 0;
   out_4154060615378714711[311] = 0;
   out_4154060615378714711[312] = 0;
   out_4154060615378714711[313] = 0;
   out_4154060615378714711[314] = 0;
   out_4154060615378714711[315] = 0;
   out_4154060615378714711[316] = 0;
   out_4154060615378714711[317] = 0;
   out_4154060615378714711[318] = 0;
   out_4154060615378714711[319] = 0;
   out_4154060615378714711[320] = 0;
   out_4154060615378714711[321] = 0;
   out_4154060615378714711[322] = 0;
   out_4154060615378714711[323] = 0;
   out_4154060615378714711[324] = 0;
   out_4154060615378714711[325] = 0;
   out_4154060615378714711[326] = 0;
   out_4154060615378714711[327] = 0;
   out_4154060615378714711[328] = 0;
   out_4154060615378714711[329] = 0;
   out_4154060615378714711[330] = 1;
   out_4154060615378714711[331] = 0;
   out_4154060615378714711[332] = 0;
   out_4154060615378714711[333] = 0;
   out_4154060615378714711[334] = 0;
   out_4154060615378714711[335] = 0;
   out_4154060615378714711[336] = 0;
   out_4154060615378714711[337] = 0;
   out_4154060615378714711[338] = 0;
   out_4154060615378714711[339] = 0;
   out_4154060615378714711[340] = 0;
   out_4154060615378714711[341] = 0;
   out_4154060615378714711[342] = 0;
   out_4154060615378714711[343] = 0;
   out_4154060615378714711[344] = 0;
   out_4154060615378714711[345] = 0;
   out_4154060615378714711[346] = 0;
   out_4154060615378714711[347] = 0;
   out_4154060615378714711[348] = 0;
   out_4154060615378714711[349] = 0;
   out_4154060615378714711[350] = 0;
   out_4154060615378714711[351] = 0;
   out_4154060615378714711[352] = 1;
   out_4154060615378714711[353] = 0;
   out_4154060615378714711[354] = 0;
   out_4154060615378714711[355] = 0;
   out_4154060615378714711[356] = 0;
   out_4154060615378714711[357] = 0;
   out_4154060615378714711[358] = 0;
   out_4154060615378714711[359] = 0;
   out_4154060615378714711[360] = 0;
   out_4154060615378714711[361] = 0;
   out_4154060615378714711[362] = 0;
   out_4154060615378714711[363] = 0;
   out_4154060615378714711[364] = 0;
   out_4154060615378714711[365] = 0;
   out_4154060615378714711[366] = 0;
   out_4154060615378714711[367] = 0;
   out_4154060615378714711[368] = 0;
   out_4154060615378714711[369] = 0;
   out_4154060615378714711[370] = 0;
   out_4154060615378714711[371] = 0;
   out_4154060615378714711[372] = 0;
   out_4154060615378714711[373] = 0;
   out_4154060615378714711[374] = 1;
   out_4154060615378714711[375] = 0;
   out_4154060615378714711[376] = 0;
   out_4154060615378714711[377] = 0;
   out_4154060615378714711[378] = 0;
   out_4154060615378714711[379] = 0;
   out_4154060615378714711[380] = 0;
   out_4154060615378714711[381] = 0;
   out_4154060615378714711[382] = 0;
   out_4154060615378714711[383] = 0;
   out_4154060615378714711[384] = 0;
   out_4154060615378714711[385] = 0;
   out_4154060615378714711[386] = 0;
   out_4154060615378714711[387] = 0;
   out_4154060615378714711[388] = 0;
   out_4154060615378714711[389] = 0;
   out_4154060615378714711[390] = 0;
   out_4154060615378714711[391] = 0;
   out_4154060615378714711[392] = 0;
   out_4154060615378714711[393] = 0;
   out_4154060615378714711[394] = 0;
   out_4154060615378714711[395] = 0;
   out_4154060615378714711[396] = 1;
   out_4154060615378714711[397] = 0;
   out_4154060615378714711[398] = 0;
   out_4154060615378714711[399] = 0;
   out_4154060615378714711[400] = 0;
   out_4154060615378714711[401] = 0;
   out_4154060615378714711[402] = 0;
   out_4154060615378714711[403] = 0;
   out_4154060615378714711[404] = 0;
   out_4154060615378714711[405] = 0;
   out_4154060615378714711[406] = 0;
   out_4154060615378714711[407] = 0;
   out_4154060615378714711[408] = 0;
   out_4154060615378714711[409] = 0;
   out_4154060615378714711[410] = 0;
   out_4154060615378714711[411] = 0;
   out_4154060615378714711[412] = 0;
   out_4154060615378714711[413] = 0;
   out_4154060615378714711[414] = 0;
   out_4154060615378714711[415] = 0;
   out_4154060615378714711[416] = 0;
   out_4154060615378714711[417] = 0;
   out_4154060615378714711[418] = 1;
   out_4154060615378714711[419] = 0;
   out_4154060615378714711[420] = 0;
   out_4154060615378714711[421] = 0;
   out_4154060615378714711[422] = 0;
   out_4154060615378714711[423] = 0;
   out_4154060615378714711[424] = 0;
   out_4154060615378714711[425] = 0;
   out_4154060615378714711[426] = 0;
   out_4154060615378714711[427] = 0;
   out_4154060615378714711[428] = 0;
   out_4154060615378714711[429] = 0;
   out_4154060615378714711[430] = 0;
   out_4154060615378714711[431] = 0;
   out_4154060615378714711[432] = 0;
   out_4154060615378714711[433] = 0;
   out_4154060615378714711[434] = 0;
   out_4154060615378714711[435] = 0;
   out_4154060615378714711[436] = 0;
   out_4154060615378714711[437] = 0;
   out_4154060615378714711[438] = 0;
   out_4154060615378714711[439] = 0;
   out_4154060615378714711[440] = 1;
}
void h_4(double *state, double *unused, double *out_2212251112735887867) {
   out_2212251112735887867[0] = state[10] + state[13];
   out_2212251112735887867[1] = state[11] + state[14];
   out_2212251112735887867[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3397264096299453329) {
   out_3397264096299453329[0] = 0;
   out_3397264096299453329[1] = 0;
   out_3397264096299453329[2] = 0;
   out_3397264096299453329[3] = 0;
   out_3397264096299453329[4] = 0;
   out_3397264096299453329[5] = 0;
   out_3397264096299453329[6] = 0;
   out_3397264096299453329[7] = 0;
   out_3397264096299453329[8] = 0;
   out_3397264096299453329[9] = 0;
   out_3397264096299453329[10] = 1;
   out_3397264096299453329[11] = 0;
   out_3397264096299453329[12] = 0;
   out_3397264096299453329[13] = 1;
   out_3397264096299453329[14] = 0;
   out_3397264096299453329[15] = 0;
   out_3397264096299453329[16] = 0;
   out_3397264096299453329[17] = 0;
   out_3397264096299453329[18] = 0;
   out_3397264096299453329[19] = 0;
   out_3397264096299453329[20] = 0;
   out_3397264096299453329[21] = 0;
   out_3397264096299453329[22] = 0;
   out_3397264096299453329[23] = 0;
   out_3397264096299453329[24] = 0;
   out_3397264096299453329[25] = 0;
   out_3397264096299453329[26] = 0;
   out_3397264096299453329[27] = 0;
   out_3397264096299453329[28] = 0;
   out_3397264096299453329[29] = 0;
   out_3397264096299453329[30] = 0;
   out_3397264096299453329[31] = 0;
   out_3397264096299453329[32] = 0;
   out_3397264096299453329[33] = 1;
   out_3397264096299453329[34] = 0;
   out_3397264096299453329[35] = 0;
   out_3397264096299453329[36] = 1;
   out_3397264096299453329[37] = 0;
   out_3397264096299453329[38] = 0;
   out_3397264096299453329[39] = 0;
   out_3397264096299453329[40] = 0;
   out_3397264096299453329[41] = 0;
   out_3397264096299453329[42] = 0;
   out_3397264096299453329[43] = 0;
   out_3397264096299453329[44] = 0;
   out_3397264096299453329[45] = 0;
   out_3397264096299453329[46] = 0;
   out_3397264096299453329[47] = 0;
   out_3397264096299453329[48] = 0;
   out_3397264096299453329[49] = 0;
   out_3397264096299453329[50] = 0;
   out_3397264096299453329[51] = 0;
   out_3397264096299453329[52] = 0;
   out_3397264096299453329[53] = 0;
   out_3397264096299453329[54] = 0;
   out_3397264096299453329[55] = 0;
   out_3397264096299453329[56] = 1;
   out_3397264096299453329[57] = 0;
   out_3397264096299453329[58] = 0;
   out_3397264096299453329[59] = 1;
   out_3397264096299453329[60] = 0;
   out_3397264096299453329[61] = 0;
   out_3397264096299453329[62] = 0;
   out_3397264096299453329[63] = 0;
   out_3397264096299453329[64] = 0;
   out_3397264096299453329[65] = 0;
}
void h_9(double *state, double *unused, double *out_820401519696436064) {
   out_820401519696436064[0] = state[10];
   out_820401519696436064[1] = state[11];
   out_820401519696436064[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3889954838964994141) {
   out_3889954838964994141[0] = 0;
   out_3889954838964994141[1] = 0;
   out_3889954838964994141[2] = 0;
   out_3889954838964994141[3] = 0;
   out_3889954838964994141[4] = 0;
   out_3889954838964994141[5] = 0;
   out_3889954838964994141[6] = 0;
   out_3889954838964994141[7] = 0;
   out_3889954838964994141[8] = 0;
   out_3889954838964994141[9] = 0;
   out_3889954838964994141[10] = 1;
   out_3889954838964994141[11] = 0;
   out_3889954838964994141[12] = 0;
   out_3889954838964994141[13] = 0;
   out_3889954838964994141[14] = 0;
   out_3889954838964994141[15] = 0;
   out_3889954838964994141[16] = 0;
   out_3889954838964994141[17] = 0;
   out_3889954838964994141[18] = 0;
   out_3889954838964994141[19] = 0;
   out_3889954838964994141[20] = 0;
   out_3889954838964994141[21] = 0;
   out_3889954838964994141[22] = 0;
   out_3889954838964994141[23] = 0;
   out_3889954838964994141[24] = 0;
   out_3889954838964994141[25] = 0;
   out_3889954838964994141[26] = 0;
   out_3889954838964994141[27] = 0;
   out_3889954838964994141[28] = 0;
   out_3889954838964994141[29] = 0;
   out_3889954838964994141[30] = 0;
   out_3889954838964994141[31] = 0;
   out_3889954838964994141[32] = 0;
   out_3889954838964994141[33] = 1;
   out_3889954838964994141[34] = 0;
   out_3889954838964994141[35] = 0;
   out_3889954838964994141[36] = 0;
   out_3889954838964994141[37] = 0;
   out_3889954838964994141[38] = 0;
   out_3889954838964994141[39] = 0;
   out_3889954838964994141[40] = 0;
   out_3889954838964994141[41] = 0;
   out_3889954838964994141[42] = 0;
   out_3889954838964994141[43] = 0;
   out_3889954838964994141[44] = 0;
   out_3889954838964994141[45] = 0;
   out_3889954838964994141[46] = 0;
   out_3889954838964994141[47] = 0;
   out_3889954838964994141[48] = 0;
   out_3889954838964994141[49] = 0;
   out_3889954838964994141[50] = 0;
   out_3889954838964994141[51] = 0;
   out_3889954838964994141[52] = 0;
   out_3889954838964994141[53] = 0;
   out_3889954838964994141[54] = 0;
   out_3889954838964994141[55] = 0;
   out_3889954838964994141[56] = 1;
   out_3889954838964994141[57] = 0;
   out_3889954838964994141[58] = 0;
   out_3889954838964994141[59] = 0;
   out_3889954838964994141[60] = 0;
   out_3889954838964994141[61] = 0;
   out_3889954838964994141[62] = 0;
   out_3889954838964994141[63] = 0;
   out_3889954838964994141[64] = 0;
   out_3889954838964994141[65] = 0;
}
void h_10(double *state, double *unused, double *out_507373885694143139) {
   out_507373885694143139[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_507373885694143139[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_507373885694143139[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_491213846029255995) {
   out_491213846029255995[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_491213846029255995[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_491213846029255995[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_491213846029255995[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_491213846029255995[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_491213846029255995[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_491213846029255995[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_491213846029255995[7] = 0;
   out_491213846029255995[8] = 0;
   out_491213846029255995[9] = 0;
   out_491213846029255995[10] = 0;
   out_491213846029255995[11] = 0;
   out_491213846029255995[12] = 0;
   out_491213846029255995[13] = 0;
   out_491213846029255995[14] = 0;
   out_491213846029255995[15] = 0;
   out_491213846029255995[16] = 1;
   out_491213846029255995[17] = 0;
   out_491213846029255995[18] = 0;
   out_491213846029255995[19] = 1;
   out_491213846029255995[20] = 0;
   out_491213846029255995[21] = 0;
   out_491213846029255995[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_491213846029255995[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_491213846029255995[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_491213846029255995[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_491213846029255995[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_491213846029255995[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_491213846029255995[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_491213846029255995[29] = 0;
   out_491213846029255995[30] = 0;
   out_491213846029255995[31] = 0;
   out_491213846029255995[32] = 0;
   out_491213846029255995[33] = 0;
   out_491213846029255995[34] = 0;
   out_491213846029255995[35] = 0;
   out_491213846029255995[36] = 0;
   out_491213846029255995[37] = 0;
   out_491213846029255995[38] = 0;
   out_491213846029255995[39] = 1;
   out_491213846029255995[40] = 0;
   out_491213846029255995[41] = 0;
   out_491213846029255995[42] = 1;
   out_491213846029255995[43] = 0;
   out_491213846029255995[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_491213846029255995[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_491213846029255995[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_491213846029255995[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_491213846029255995[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_491213846029255995[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_491213846029255995[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_491213846029255995[51] = 0;
   out_491213846029255995[52] = 0;
   out_491213846029255995[53] = 0;
   out_491213846029255995[54] = 0;
   out_491213846029255995[55] = 0;
   out_491213846029255995[56] = 0;
   out_491213846029255995[57] = 0;
   out_491213846029255995[58] = 0;
   out_491213846029255995[59] = 0;
   out_491213846029255995[60] = 0;
   out_491213846029255995[61] = 0;
   out_491213846029255995[62] = 1;
   out_491213846029255995[63] = 0;
   out_491213846029255995[64] = 0;
   out_491213846029255995[65] = 1;
}
void h_12(double *state, double *unused, double *out_3794464210217895999) {
   out_3794464210217895999[0] = state[0];
   out_3794464210217895999[1] = state[1];
   out_3794464210217895999[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1622192311732508466) {
   out_1622192311732508466[0] = 1;
   out_1622192311732508466[1] = 0;
   out_1622192311732508466[2] = 0;
   out_1622192311732508466[3] = 0;
   out_1622192311732508466[4] = 0;
   out_1622192311732508466[5] = 0;
   out_1622192311732508466[6] = 0;
   out_1622192311732508466[7] = 0;
   out_1622192311732508466[8] = 0;
   out_1622192311732508466[9] = 0;
   out_1622192311732508466[10] = 0;
   out_1622192311732508466[11] = 0;
   out_1622192311732508466[12] = 0;
   out_1622192311732508466[13] = 0;
   out_1622192311732508466[14] = 0;
   out_1622192311732508466[15] = 0;
   out_1622192311732508466[16] = 0;
   out_1622192311732508466[17] = 0;
   out_1622192311732508466[18] = 0;
   out_1622192311732508466[19] = 0;
   out_1622192311732508466[20] = 0;
   out_1622192311732508466[21] = 0;
   out_1622192311732508466[22] = 0;
   out_1622192311732508466[23] = 1;
   out_1622192311732508466[24] = 0;
   out_1622192311732508466[25] = 0;
   out_1622192311732508466[26] = 0;
   out_1622192311732508466[27] = 0;
   out_1622192311732508466[28] = 0;
   out_1622192311732508466[29] = 0;
   out_1622192311732508466[30] = 0;
   out_1622192311732508466[31] = 0;
   out_1622192311732508466[32] = 0;
   out_1622192311732508466[33] = 0;
   out_1622192311732508466[34] = 0;
   out_1622192311732508466[35] = 0;
   out_1622192311732508466[36] = 0;
   out_1622192311732508466[37] = 0;
   out_1622192311732508466[38] = 0;
   out_1622192311732508466[39] = 0;
   out_1622192311732508466[40] = 0;
   out_1622192311732508466[41] = 0;
   out_1622192311732508466[42] = 0;
   out_1622192311732508466[43] = 0;
   out_1622192311732508466[44] = 0;
   out_1622192311732508466[45] = 0;
   out_1622192311732508466[46] = 1;
   out_1622192311732508466[47] = 0;
   out_1622192311732508466[48] = 0;
   out_1622192311732508466[49] = 0;
   out_1622192311732508466[50] = 0;
   out_1622192311732508466[51] = 0;
   out_1622192311732508466[52] = 0;
   out_1622192311732508466[53] = 0;
   out_1622192311732508466[54] = 0;
   out_1622192311732508466[55] = 0;
   out_1622192311732508466[56] = 0;
   out_1622192311732508466[57] = 0;
   out_1622192311732508466[58] = 0;
   out_1622192311732508466[59] = 0;
   out_1622192311732508466[60] = 0;
   out_1622192311732508466[61] = 0;
   out_1622192311732508466[62] = 0;
   out_1622192311732508466[63] = 0;
   out_1622192311732508466[64] = 0;
   out_1622192311732508466[65] = 0;
}
void h_35(double *state, double *unused, double *out_4994379186538344813) {
   out_4994379186538344813[0] = state[7];
   out_4994379186538344813[1] = state[8];
   out_4994379186538344813[2] = state[9];
}
void H_35(double *state, double *unused, double *out_30602038926845953) {
   out_30602038926845953[0] = 0;
   out_30602038926845953[1] = 0;
   out_30602038926845953[2] = 0;
   out_30602038926845953[3] = 0;
   out_30602038926845953[4] = 0;
   out_30602038926845953[5] = 0;
   out_30602038926845953[6] = 0;
   out_30602038926845953[7] = 1;
   out_30602038926845953[8] = 0;
   out_30602038926845953[9] = 0;
   out_30602038926845953[10] = 0;
   out_30602038926845953[11] = 0;
   out_30602038926845953[12] = 0;
   out_30602038926845953[13] = 0;
   out_30602038926845953[14] = 0;
   out_30602038926845953[15] = 0;
   out_30602038926845953[16] = 0;
   out_30602038926845953[17] = 0;
   out_30602038926845953[18] = 0;
   out_30602038926845953[19] = 0;
   out_30602038926845953[20] = 0;
   out_30602038926845953[21] = 0;
   out_30602038926845953[22] = 0;
   out_30602038926845953[23] = 0;
   out_30602038926845953[24] = 0;
   out_30602038926845953[25] = 0;
   out_30602038926845953[26] = 0;
   out_30602038926845953[27] = 0;
   out_30602038926845953[28] = 0;
   out_30602038926845953[29] = 0;
   out_30602038926845953[30] = 1;
   out_30602038926845953[31] = 0;
   out_30602038926845953[32] = 0;
   out_30602038926845953[33] = 0;
   out_30602038926845953[34] = 0;
   out_30602038926845953[35] = 0;
   out_30602038926845953[36] = 0;
   out_30602038926845953[37] = 0;
   out_30602038926845953[38] = 0;
   out_30602038926845953[39] = 0;
   out_30602038926845953[40] = 0;
   out_30602038926845953[41] = 0;
   out_30602038926845953[42] = 0;
   out_30602038926845953[43] = 0;
   out_30602038926845953[44] = 0;
   out_30602038926845953[45] = 0;
   out_30602038926845953[46] = 0;
   out_30602038926845953[47] = 0;
   out_30602038926845953[48] = 0;
   out_30602038926845953[49] = 0;
   out_30602038926845953[50] = 0;
   out_30602038926845953[51] = 0;
   out_30602038926845953[52] = 0;
   out_30602038926845953[53] = 1;
   out_30602038926845953[54] = 0;
   out_30602038926845953[55] = 0;
   out_30602038926845953[56] = 0;
   out_30602038926845953[57] = 0;
   out_30602038926845953[58] = 0;
   out_30602038926845953[59] = 0;
   out_30602038926845953[60] = 0;
   out_30602038926845953[61] = 0;
   out_30602038926845953[62] = 0;
   out_30602038926845953[63] = 0;
   out_30602038926845953[64] = 0;
   out_30602038926845953[65] = 0;
}
void h_32(double *state, double *unused, double *out_6498826032295832395) {
   out_6498826032295832395[0] = state[3];
   out_6498826032295832395[1] = state[4];
   out_6498826032295832395[2] = state[5];
   out_6498826032295832395[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3485115101030013887) {
   out_3485115101030013887[0] = 0;
   out_3485115101030013887[1] = 0;
   out_3485115101030013887[2] = 0;
   out_3485115101030013887[3] = 1;
   out_3485115101030013887[4] = 0;
   out_3485115101030013887[5] = 0;
   out_3485115101030013887[6] = 0;
   out_3485115101030013887[7] = 0;
   out_3485115101030013887[8] = 0;
   out_3485115101030013887[9] = 0;
   out_3485115101030013887[10] = 0;
   out_3485115101030013887[11] = 0;
   out_3485115101030013887[12] = 0;
   out_3485115101030013887[13] = 0;
   out_3485115101030013887[14] = 0;
   out_3485115101030013887[15] = 0;
   out_3485115101030013887[16] = 0;
   out_3485115101030013887[17] = 0;
   out_3485115101030013887[18] = 0;
   out_3485115101030013887[19] = 0;
   out_3485115101030013887[20] = 0;
   out_3485115101030013887[21] = 0;
   out_3485115101030013887[22] = 0;
   out_3485115101030013887[23] = 0;
   out_3485115101030013887[24] = 0;
   out_3485115101030013887[25] = 0;
   out_3485115101030013887[26] = 1;
   out_3485115101030013887[27] = 0;
   out_3485115101030013887[28] = 0;
   out_3485115101030013887[29] = 0;
   out_3485115101030013887[30] = 0;
   out_3485115101030013887[31] = 0;
   out_3485115101030013887[32] = 0;
   out_3485115101030013887[33] = 0;
   out_3485115101030013887[34] = 0;
   out_3485115101030013887[35] = 0;
   out_3485115101030013887[36] = 0;
   out_3485115101030013887[37] = 0;
   out_3485115101030013887[38] = 0;
   out_3485115101030013887[39] = 0;
   out_3485115101030013887[40] = 0;
   out_3485115101030013887[41] = 0;
   out_3485115101030013887[42] = 0;
   out_3485115101030013887[43] = 0;
   out_3485115101030013887[44] = 0;
   out_3485115101030013887[45] = 0;
   out_3485115101030013887[46] = 0;
   out_3485115101030013887[47] = 0;
   out_3485115101030013887[48] = 0;
   out_3485115101030013887[49] = 1;
   out_3485115101030013887[50] = 0;
   out_3485115101030013887[51] = 0;
   out_3485115101030013887[52] = 0;
   out_3485115101030013887[53] = 0;
   out_3485115101030013887[54] = 0;
   out_3485115101030013887[55] = 0;
   out_3485115101030013887[56] = 0;
   out_3485115101030013887[57] = 0;
   out_3485115101030013887[58] = 0;
   out_3485115101030013887[59] = 0;
   out_3485115101030013887[60] = 0;
   out_3485115101030013887[61] = 0;
   out_3485115101030013887[62] = 0;
   out_3485115101030013887[63] = 0;
   out_3485115101030013887[64] = 0;
   out_3485115101030013887[65] = 0;
   out_3485115101030013887[66] = 0;
   out_3485115101030013887[67] = 0;
   out_3485115101030013887[68] = 0;
   out_3485115101030013887[69] = 0;
   out_3485115101030013887[70] = 0;
   out_3485115101030013887[71] = 0;
   out_3485115101030013887[72] = 1;
   out_3485115101030013887[73] = 0;
   out_3485115101030013887[74] = 0;
   out_3485115101030013887[75] = 0;
   out_3485115101030013887[76] = 0;
   out_3485115101030013887[77] = 0;
   out_3485115101030013887[78] = 0;
   out_3485115101030013887[79] = 0;
   out_3485115101030013887[80] = 0;
   out_3485115101030013887[81] = 0;
   out_3485115101030013887[82] = 0;
   out_3485115101030013887[83] = 0;
   out_3485115101030013887[84] = 0;
   out_3485115101030013887[85] = 0;
   out_3485115101030013887[86] = 0;
   out_3485115101030013887[87] = 0;
}
void h_13(double *state, double *unused, double *out_2161486960338920047) {
   out_2161486960338920047[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2161486960338920047[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2161486960338920047[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2943230005699876328) {
   out_2943230005699876328[0] = 0;
   out_2943230005699876328[1] = 0;
   out_2943230005699876328[2] = 0;
   out_2943230005699876328[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2943230005699876328[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2943230005699876328[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2943230005699876328[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2943230005699876328[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2943230005699876328[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2943230005699876328[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2943230005699876328[10] = 0;
   out_2943230005699876328[11] = 0;
   out_2943230005699876328[12] = 0;
   out_2943230005699876328[13] = 0;
   out_2943230005699876328[14] = 0;
   out_2943230005699876328[15] = 0;
   out_2943230005699876328[16] = 0;
   out_2943230005699876328[17] = 0;
   out_2943230005699876328[18] = 0;
   out_2943230005699876328[19] = 0;
   out_2943230005699876328[20] = 0;
   out_2943230005699876328[21] = 0;
   out_2943230005699876328[22] = 0;
   out_2943230005699876328[23] = 0;
   out_2943230005699876328[24] = 0;
   out_2943230005699876328[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2943230005699876328[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2943230005699876328[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2943230005699876328[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2943230005699876328[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2943230005699876328[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2943230005699876328[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2943230005699876328[32] = 0;
   out_2943230005699876328[33] = 0;
   out_2943230005699876328[34] = 0;
   out_2943230005699876328[35] = 0;
   out_2943230005699876328[36] = 0;
   out_2943230005699876328[37] = 0;
   out_2943230005699876328[38] = 0;
   out_2943230005699876328[39] = 0;
   out_2943230005699876328[40] = 0;
   out_2943230005699876328[41] = 0;
   out_2943230005699876328[42] = 0;
   out_2943230005699876328[43] = 0;
   out_2943230005699876328[44] = 0;
   out_2943230005699876328[45] = 0;
   out_2943230005699876328[46] = 0;
   out_2943230005699876328[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2943230005699876328[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2943230005699876328[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2943230005699876328[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2943230005699876328[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2943230005699876328[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2943230005699876328[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2943230005699876328[54] = 0;
   out_2943230005699876328[55] = 0;
   out_2943230005699876328[56] = 0;
   out_2943230005699876328[57] = 0;
   out_2943230005699876328[58] = 0;
   out_2943230005699876328[59] = 0;
   out_2943230005699876328[60] = 0;
   out_2943230005699876328[61] = 0;
   out_2943230005699876328[62] = 0;
   out_2943230005699876328[63] = 0;
   out_2943230005699876328[64] = 0;
   out_2943230005699876328[65] = 0;
}
void h_14(double *state, double *unused, double *out_820401519696436064) {
   out_820401519696436064[0] = state[10];
   out_820401519696436064[1] = state[11];
   out_820401519696436064[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3889954838964994141) {
   out_3889954838964994141[0] = 0;
   out_3889954838964994141[1] = 0;
   out_3889954838964994141[2] = 0;
   out_3889954838964994141[3] = 0;
   out_3889954838964994141[4] = 0;
   out_3889954838964994141[5] = 0;
   out_3889954838964994141[6] = 0;
   out_3889954838964994141[7] = 0;
   out_3889954838964994141[8] = 0;
   out_3889954838964994141[9] = 0;
   out_3889954838964994141[10] = 1;
   out_3889954838964994141[11] = 0;
   out_3889954838964994141[12] = 0;
   out_3889954838964994141[13] = 0;
   out_3889954838964994141[14] = 0;
   out_3889954838964994141[15] = 0;
   out_3889954838964994141[16] = 0;
   out_3889954838964994141[17] = 0;
   out_3889954838964994141[18] = 0;
   out_3889954838964994141[19] = 0;
   out_3889954838964994141[20] = 0;
   out_3889954838964994141[21] = 0;
   out_3889954838964994141[22] = 0;
   out_3889954838964994141[23] = 0;
   out_3889954838964994141[24] = 0;
   out_3889954838964994141[25] = 0;
   out_3889954838964994141[26] = 0;
   out_3889954838964994141[27] = 0;
   out_3889954838964994141[28] = 0;
   out_3889954838964994141[29] = 0;
   out_3889954838964994141[30] = 0;
   out_3889954838964994141[31] = 0;
   out_3889954838964994141[32] = 0;
   out_3889954838964994141[33] = 1;
   out_3889954838964994141[34] = 0;
   out_3889954838964994141[35] = 0;
   out_3889954838964994141[36] = 0;
   out_3889954838964994141[37] = 0;
   out_3889954838964994141[38] = 0;
   out_3889954838964994141[39] = 0;
   out_3889954838964994141[40] = 0;
   out_3889954838964994141[41] = 0;
   out_3889954838964994141[42] = 0;
   out_3889954838964994141[43] = 0;
   out_3889954838964994141[44] = 0;
   out_3889954838964994141[45] = 0;
   out_3889954838964994141[46] = 0;
   out_3889954838964994141[47] = 0;
   out_3889954838964994141[48] = 0;
   out_3889954838964994141[49] = 0;
   out_3889954838964994141[50] = 0;
   out_3889954838964994141[51] = 0;
   out_3889954838964994141[52] = 0;
   out_3889954838964994141[53] = 0;
   out_3889954838964994141[54] = 0;
   out_3889954838964994141[55] = 0;
   out_3889954838964994141[56] = 1;
   out_3889954838964994141[57] = 0;
   out_3889954838964994141[58] = 0;
   out_3889954838964994141[59] = 0;
   out_3889954838964994141[60] = 0;
   out_3889954838964994141[61] = 0;
   out_3889954838964994141[62] = 0;
   out_3889954838964994141[63] = 0;
   out_3889954838964994141[64] = 0;
   out_3889954838964994141[65] = 0;
}
void h_33(double *state, double *unused, double *out_651685544947035238) {
   out_651685544947035238[0] = state[16];
   out_651685544947035238[1] = state[17];
   out_651685544947035238[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3119954965712011651) {
   out_3119954965712011651[0] = 0;
   out_3119954965712011651[1] = 0;
   out_3119954965712011651[2] = 0;
   out_3119954965712011651[3] = 0;
   out_3119954965712011651[4] = 0;
   out_3119954965712011651[5] = 0;
   out_3119954965712011651[6] = 0;
   out_3119954965712011651[7] = 0;
   out_3119954965712011651[8] = 0;
   out_3119954965712011651[9] = 0;
   out_3119954965712011651[10] = 0;
   out_3119954965712011651[11] = 0;
   out_3119954965712011651[12] = 0;
   out_3119954965712011651[13] = 0;
   out_3119954965712011651[14] = 0;
   out_3119954965712011651[15] = 0;
   out_3119954965712011651[16] = 1;
   out_3119954965712011651[17] = 0;
   out_3119954965712011651[18] = 0;
   out_3119954965712011651[19] = 0;
   out_3119954965712011651[20] = 0;
   out_3119954965712011651[21] = 0;
   out_3119954965712011651[22] = 0;
   out_3119954965712011651[23] = 0;
   out_3119954965712011651[24] = 0;
   out_3119954965712011651[25] = 0;
   out_3119954965712011651[26] = 0;
   out_3119954965712011651[27] = 0;
   out_3119954965712011651[28] = 0;
   out_3119954965712011651[29] = 0;
   out_3119954965712011651[30] = 0;
   out_3119954965712011651[31] = 0;
   out_3119954965712011651[32] = 0;
   out_3119954965712011651[33] = 0;
   out_3119954965712011651[34] = 0;
   out_3119954965712011651[35] = 0;
   out_3119954965712011651[36] = 0;
   out_3119954965712011651[37] = 0;
   out_3119954965712011651[38] = 0;
   out_3119954965712011651[39] = 1;
   out_3119954965712011651[40] = 0;
   out_3119954965712011651[41] = 0;
   out_3119954965712011651[42] = 0;
   out_3119954965712011651[43] = 0;
   out_3119954965712011651[44] = 0;
   out_3119954965712011651[45] = 0;
   out_3119954965712011651[46] = 0;
   out_3119954965712011651[47] = 0;
   out_3119954965712011651[48] = 0;
   out_3119954965712011651[49] = 0;
   out_3119954965712011651[50] = 0;
   out_3119954965712011651[51] = 0;
   out_3119954965712011651[52] = 0;
   out_3119954965712011651[53] = 0;
   out_3119954965712011651[54] = 0;
   out_3119954965712011651[55] = 0;
   out_3119954965712011651[56] = 0;
   out_3119954965712011651[57] = 0;
   out_3119954965712011651[58] = 0;
   out_3119954965712011651[59] = 0;
   out_3119954965712011651[60] = 0;
   out_3119954965712011651[61] = 0;
   out_3119954965712011651[62] = 1;
   out_3119954965712011651[63] = 0;
   out_3119954965712011651[64] = 0;
   out_3119954965712011651[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8430055075784696659) {
  H(in_vec, out_8430055075784696659);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3254368280690439304) {
  err_fun(nom_x, delta_x, out_3254368280690439304);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8788489577648386071) {
  inv_err_fun(nom_x, true_x, out_8788489577648386071);
}
void live_H_mod_fun(double *state, double *out_2792624268178059430) {
  H_mod_fun(state, out_2792624268178059430);
}
void live_f_fun(double *state, double dt, double *out_5459361766403996839) {
  f_fun(state,  dt, out_5459361766403996839);
}
void live_F_fun(double *state, double dt, double *out_4154060615378714711) {
  F_fun(state,  dt, out_4154060615378714711);
}
void live_h_4(double *state, double *unused, double *out_2212251112735887867) {
  h_4(state, unused, out_2212251112735887867);
}
void live_H_4(double *state, double *unused, double *out_3397264096299453329) {
  H_4(state, unused, out_3397264096299453329);
}
void live_h_9(double *state, double *unused, double *out_820401519696436064) {
  h_9(state, unused, out_820401519696436064);
}
void live_H_9(double *state, double *unused, double *out_3889954838964994141) {
  H_9(state, unused, out_3889954838964994141);
}
void live_h_10(double *state, double *unused, double *out_507373885694143139) {
  h_10(state, unused, out_507373885694143139);
}
void live_H_10(double *state, double *unused, double *out_491213846029255995) {
  H_10(state, unused, out_491213846029255995);
}
void live_h_12(double *state, double *unused, double *out_3794464210217895999) {
  h_12(state, unused, out_3794464210217895999);
}
void live_H_12(double *state, double *unused, double *out_1622192311732508466) {
  H_12(state, unused, out_1622192311732508466);
}
void live_h_35(double *state, double *unused, double *out_4994379186538344813) {
  h_35(state, unused, out_4994379186538344813);
}
void live_H_35(double *state, double *unused, double *out_30602038926845953) {
  H_35(state, unused, out_30602038926845953);
}
void live_h_32(double *state, double *unused, double *out_6498826032295832395) {
  h_32(state, unused, out_6498826032295832395);
}
void live_H_32(double *state, double *unused, double *out_3485115101030013887) {
  H_32(state, unused, out_3485115101030013887);
}
void live_h_13(double *state, double *unused, double *out_2161486960338920047) {
  h_13(state, unused, out_2161486960338920047);
}
void live_H_13(double *state, double *unused, double *out_2943230005699876328) {
  H_13(state, unused, out_2943230005699876328);
}
void live_h_14(double *state, double *unused, double *out_820401519696436064) {
  h_14(state, unused, out_820401519696436064);
}
void live_H_14(double *state, double *unused, double *out_3889954838964994141) {
  H_14(state, unused, out_3889954838964994141);
}
void live_h_33(double *state, double *unused, double *out_651685544947035238) {
  h_33(state, unused, out_651685544947035238);
}
void live_H_33(double *state, double *unused, double *out_3119954965712011651) {
  H_33(state, unused, out_3119954965712011651);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
